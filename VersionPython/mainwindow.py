# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\cacle\Desktop\NavEcoApp\mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from pyqtgraph import PlotWidget, plot
import pyqtgraph as pyg
pyg.setConfigOption('background', 'w')
pyg.setConfigOption('foreground', 'k')
import numpy as np
import pandas as pd
from scipy import integrate
from scipy.optimize import *
import os
import csv
import decimal
import sys
import webbrowser


class Ui_main_window(object):
    def setupUi(self, main_window):

        ## Path

        self.path = "C:/Users/crybelloceferin/Documents/GIThub/BACKUP/Incertitude"

        ## Window

        main_window.setObjectName("main_window")
        main_window.setWindowTitle("NavEco - Modèle Energétique")
        main_window.resize(0, 0)

        ## Font

        font = QtGui.QFont()
        font.setPointSize(8)
        main_window.setFont(font)

        ##Colors

        palette = QtGui.QPalette()

        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255,1))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)

        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)

        brush = QtGui.QBrush(QtGui.QColor(0, 176, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)

        brush = QtGui.QBrush(QtGui.QColor(0, 176, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Link, brush)

        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)

        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)

        brush = QtGui.QBrush(QtGui.QColor(0, 176, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)

        brush = QtGui.QBrush(QtGui.QColor(0, 176, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Link, brush)

        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)

        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)

        brush = QtGui.QBrush(QtGui.QColor(0, 120, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)

        brush = QtGui.QBrush(QtGui.QColor(0, 176, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Link, brush)

        main_window.setPalette(palette)

        main_window.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)

        ##Icon

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(self.path+"/appicons/navecoicon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        main_window.setWindowIcon(icon)
        main_window.setIconSize(QtCore.QSize(30, 30))
        main_window.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)

        ##MenuBar

        self.menubar = QtWidgets.QMenuBar(main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 0, 0))
        self.menubar.setObjectName("menubar")
        main_window.setMenuBar(self.menubar)

        ##___MenuFichier

        self.menuFichier = QtWidgets.QMenu(self.menubar)
        self.menuFichier.setObjectName("menuFichier")
        self.menuFichier.setTitle("Fichier")
        self.menubar.addAction(self.menuFichier.menuAction())

        self.actionOuvrir = QtWidgets.QAction(self.menubar)
        self.actionOuvrir.setObjectName("actionOuvrir")
        self.actionOuvrir.setText("Ouvrir...")
        self.actionOuvrir.setStatusTip("Charger des paramètres")
        self.actionOuvrir.setShortcut("Ctrl+O")
        self.actionOuvrir.setIcon(QtGui.QIcon(self.path+"/icons/folder_page.png"))
        self.menuFichier.addAction(self.actionOuvrir)

        self.actionEnregistrer = QtWidgets.QAction(self.menubar)
        self.actionEnregistrer.setObjectName("actionEnregistrer")
        self.actionEnregistrer.setText("Enregistrer")
        self.actionEnregistrer.setStatusTip("Sauvegarder les paramètres")
        self.actionEnregistrer.setShortcut("Ctrl+S")
        self.actionEnregistrer.setIcon(QtGui.QIcon(self.path+"/icons/disk.png"))
        self.menuFichier.addAction(self.actionEnregistrer)

        self.actionEnregistrerSous = QtWidgets.QAction(self.menubar)
        self.actionEnregistrerSous.setObjectName("actionEnregistrerSous")
        self.actionEnregistrerSous.setText("Enregistrer sous...")
        self.actionEnregistrerSous.setStatusTip("Sauvegarder les paramètres")
        self.actionEnregistrerSous.setIcon(QtGui.QIcon(self.path+"/icons/disk_as.png"))
        self.menuFichier.addAction(self.actionEnregistrerSous)

        self.actionIncertitudes = QtWidgets.QAction(self.menubar)
        self.actionIncertitudes.setObjectName("actionIncertitudes")
        self.actionIncertitudes.setText("Exporter incertitudes...")
        self.actionIncertitudes.setStatusTip("Exporter les Valeurs des incertitudes")
        self.actionIncertitudes.setIcon(QtGui.QIcon(self.path+"/icons/page_white_excel.png"))
        self.menuFichier.addAction(self.actionIncertitudes)

        self.actionParamDefaut = QtWidgets.QAction(self.menubar)
        self.actionParamDefaut.setObjectName("actionParamDefaut")
        self.actionParamDefaut.setText("Paramètres par défaut")
        self.actionParamDefaut.setStatusTip("Charger les paramètres par défaut")
        self.actionParamDefaut.setIcon(QtGui.QIcon(self.path+"/icons/page_white_gear.png"))
        self.actionParamDefaut.triggered.connect(lambda: self.restartApp())
        self.menuFichier.addAction(self.actionParamDefaut)

        self.actionQuit = QtWidgets.QAction(self.menubar)
        self.actionQuit.setObjectName("actionQuit")
        self.actionQuit.setText("Quitter")
        self.actionQuit.setStatusTip("Fermer NavEcoApp'")
        self.actionQuit.setIcon(QtGui.QIcon(self.path+"/icons/cancel.png"))
        self.actionQuit.triggered.connect(lambda: sys.exit(app.exec_()))
        self.menuFichier.addAction(self.actionQuit)

        ##___MenuRun

        self.menuRun = QtWidgets.QMenu(self.menubar)
        self.menuRun.setObjectName("menuRun")
        self.menuRun.setTitle("Run")
        self.menubar.addAction(self.menuRun.menuAction())

        self.actionRun = QtWidgets.QAction(self.menubar)
        self.actionRun.setObjectName("actionRun")
        self.actionRun.setText("Run")
        self.actionRun.setStatusTip("Calcul des incertitudes")
        self.actionRun.setShortcut("F5")
        self.actionRun.setIcon(QtGui.QIcon(self.path+"/icons/application_go.png"))
        self.actionRun.triggered.connect(lambda: self.run())
        self.menuRun.addAction(self.actionRun)

        # MenuCalculIncertitude

        self.menuCalcul_incertitude = QtWidgets.QMenu(self.menuRun)
        self.menuCalcul_incertitude.setObjectName("menuCalcul_incertitude")
        self.menuCalcul_incertitude.setTitle("Calcul incertitude")
        self.menuCalcul_incertitude.setIcon(QtGui.QIcon(self.path+"/icons/cog.png"))
        self.menuRun.addAction(self.menuCalcul_incertitude.menuAction())

        self.groupActionIncer = QtWidgets.QActionGroup(self.menubar)
        self.groupActionIncer.setObjectName("groupActionIncer")

        self.actionQuadratique = QtWidgets.QAction(self.menubar)
        self.actionQuadratique.setCheckable(True)
        self.actionQuadratique.setChecked(True)
        self.actionQuadratique.setObjectName("actionQuadratique")
        self.actionQuadratique.setText("Quadratique")
        self.actionQuadratique.setStatusTip("Incertitude quadratique (propagation de l\'erreur)")
        self.menuCalcul_incertitude.addAction(self.actionQuadratique)
        self.groupActionIncer.addAction(self.actionQuadratique)

        self.actionArithmetique = QtWidgets.QAction(self.menubar)
        self.actionArithmetique.setCheckable(True)
        self.actionArithmetique.setObjectName("actionArithmetique")
        self.actionArithmetique.setText("Arithmétique")
        self.actionArithmetique.setStatusTip("Incertitude arithmétique")
        self.menuCalcul_incertitude.addAction(self.actionArithmetique)
        self.groupActionIncer.addAction(self.actionArithmetique)

        #

        ##___MenuHelp

        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuHelp.setTitle("Help")
        self.menubar.addAction(self.menuHelp.menuAction())

        self.actionGuide = QtWidgets.QAction(self.menubar)
        self.actionGuide.setObjectName("actionGuide")
        self.actionGuide.setText("NavEcoApp guide")
        self.actionGuide.setStatusTip("NavEcoApp guide")
        self.actionGuide.setIcon(QtGui.QIcon(self.path+"/icons/help.png"))
        self.actionGuide.triggered.connect(lambda: self.openGuide())
        self.menuHelp.addAction(self.actionGuide)

        ##StatusBar

        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)

        ##Central Widget et splitter

        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setObjectName("centralwidget")
        main_window.setCentralWidget(self.centralwidget)

        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.horizontalLayout.addWidget(self.splitter)



        ##___Tab Parametres

        self.tabParametres = QtWidgets.QTabWidget(self.splitter)
        self.tabParametres.setObjectName("tabParametres")

        self.splitter.setStretchFactor(0,1)


        ##______SubTab Parametres

        self.Parametres = QtWidgets.QWidget()
        self.Parametres.setObjectName("Parametres")

        self.tabParametres.addTab(self.Parametres, QtGui.QIcon(self.path+"/icons/cog.png"),"Paramètres")

        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.Parametres)
        self.verticalLayout_4.setObjectName("verticalLayout_4")


        ##_________Groupe Etrac Desiree

        self.groupEtracDesire = QtWidgets.QHBoxLayout()
        self.groupEtracDesire.setObjectName("groupEtracDesire")
        self.verticalLayout_4.addLayout(self.groupEtracDesire)

        self.label_31 = QtWidgets.QLabel(self.Parametres)
        self.label_31.setObjectName("label_31")
        self.label_31.setText("Incertitude relative désirée sur l\'énergie de traction (%)")
        self.groupEtracDesire.addWidget(self.label_31)

        self.lineUEtracDesiree = QtWidgets.QLineEdit(self.Parametres)
        self.lineUEtracDesiree.setAlignment(QtCore.Qt.AlignCenter)
        self.lineUEtracDesiree.setObjectName("lineUEtracDesiree")
        self.lineUEtracDesiree.setText("1")
        self.lineUEtracDesiree.setPalette(palette)
        self.groupEtracDesire.addWidget(self.lineUEtracDesiree)


        ##_________Splitter

        self.splitter_3 = QtWidgets.QSplitter(self.Parametres)
        self.splitter_3.setOrientation(QtCore.Qt.Vertical)
        self.splitter_3.setObjectName("splitter_3")
        self.verticalLayout_4.addWidget(self.splitter_3)

        ##___________Groupe Parametres Primaires

        self.groupParamPrimaires = QtWidgets.QGroupBox(self.splitter_3)
        self.groupParamPrimaires.setObjectName("groupParamPrimaires")
        self.groupParamPrimaires.setTitle("Paramètres primaires")

        self.layoutParamPrimaires = QtWidgets.QGridLayout(self.groupParamPrimaires)
        self.layoutParamPrimaires.setObjectName("layoutParamPrimaires")

        ##______________Labels

        #Colonnes

        self.label_2 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_2.setObjectName("label_2")
        self.label_2.setText("Paramètre")
        self.layoutParamPrimaires.addWidget(self.label_2, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_52 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_52.setObjectName("label_52")
        self.label_52.setText("Symbole")
        self.layoutParamPrimaires.addWidget(self.label_52, 0, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label.setObjectName("label")
        self.label.setText("Valeur")
        self.layoutParamPrimaires.addWidget(self.label, 0, 2, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_7 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_7.setObjectName("label_7")
        self.label_7.setText("Incertitude")
        self.layoutParamPrimaires.addWidget(self.label_7, 0, 4, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_8 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_8.setObjectName("label_8")
        self.label_8.setText("Distribution")
        self.layoutParamPrimaires.addWidget(self.label_8, 0, 5, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_6 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_6.setObjectName("label_6")
        self.label_6.setText("Incertitude\nConseillée")
        self.layoutParamPrimaires.addWidget(self.label_6, 0, 7, 1, 1, QtCore.Qt.AlignHCenter)

        #Paramètres

        self.label_9 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_9.setObjectName("label_9")
        self.label_9.setText("Vitesse (m/s)")
        self.layoutParamPrimaires.addWidget(self.label_9, 2, 0, 1, 1)

        self.label_10 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_10.setObjectName("label_10")
        self.label_10.setText("Masse (kg)")
        self.layoutParamPrimaires.addWidget(self.label_10, 3, 0, 1, 1)

        self.label_11 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_11.setObjectName("label_11")
        self.label_11.setText("Pression pneus (Pa)")
        self.layoutParamPrimaires.addWidget(self.label_11, 4, 0, 1, 1)

        self.label_12 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_12.setObjectName("label_12")
        self.label_12.setText("Coefficients aérodynamiques")
        self.layoutParamPrimaires.addWidget(self.label_12, 5, 0, 1, 1)

        self.label_13 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_13.setObjectName("label_13")
        self.label_13.setText("Altitude (m)")
        self.layoutParamPrimaires.addWidget(self.label_13, 6, 0, 1, 1)

        self.label_14 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_14.setObjectName("label_14")
        self.label_14.setText("Pression atmosphérique (Pa)")
        self.layoutParamPrimaires.addWidget(self.label_14, 7, 0, 1, 1)

        self.label_15 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_15.setObjectName("label_15")
        self.label_15.setText("Température extérieure (K)")
        self.layoutParamPrimaires.addWidget(self.label_15, 8, 0, 1, 1)

        self.label_16 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_16.setObjectName("label_16")
        self.label_16.setText("Pente de la route (rad)")
        self.layoutParamPrimaires.addWidget(self.label_16, 9, 0, 1, 1)

        #Symboles

        self.label_53 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_53.setObjectName("label_53")
        self.label_53.setText("v")
        self.layoutParamPrimaires.addWidget(self.label_53, 2, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_54 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_54.setObjectName("label_54")
        self.label_54.setText("m")
        self.layoutParamPrimaires.addWidget(self.label_54, 3, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_55 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_55.setObjectName("label_55")
        self.label_55.setText("p")
        self.layoutParamPrimaires.addWidget(self.label_55, 4, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_56 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_56.setObjectName("label_56")
        self.label_56.setText("SCx")
        self.layoutParamPrimaires.addWidget(self.label_56, 5, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_57 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_57.setObjectName("label_57")
        self.label_57.setText("h")
        self.layoutParamPrimaires.addWidget(self.label_57, 6, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_58 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_58.setObjectName("label_58")
        self.label_58.setText("P")
        self.layoutParamPrimaires.addWidget(self.label_58, 7, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_59 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_59.setObjectName("label_59")
        self.label_59.setText("T")
        self.layoutParamPrimaires.addWidget(self.label_59, 8, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_60 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_60.setObjectName("label_60")
        self.label_60.setText("alpha")
        self.layoutParamPrimaires.addWidget(self.label_60, 9, 1, 1, 1, QtCore.Qt.AlignHCenter)

        #Line

        self.line = QtWidgets.QFrame(self.groupParamPrimaires)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.layoutParamPrimaires.addWidget(self.line, 1, 0, 1, 8)

        ##______________Line edit valeurs

        self.linem = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.linem.setAlignment(QtCore.Qt.AlignCenter)
        self.linem.setObjectName("linem")
        self.linem.setText("1240")
        self.layoutParamPrimaires.addWidget(self.linem, 3, 2, 1, 1)

        self.linep = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.linep.setAlignment(QtCore.Qt.AlignCenter)
        self.linep.setObjectName("linep")
        self.linep.setText("200000")
        self.layoutParamPrimaires.addWidget(self.linep, 4, 2, 1, 1)

        self.lineSCx = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineSCx.setAlignment(QtCore.Qt.AlignCenter)
        self.lineSCx.setObjectName("lineSCx")
        self.lineSCx.setText("0.828")
        self.layoutParamPrimaires.addWidget(self.lineSCx, 5, 2, 1, 1)

        self.lineh = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineh.setAlignment(QtCore.Qt.AlignCenter)
        self.lineh.setObjectName("lineh")
        self.lineh.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineh, 6, 2, 1, 1)

        self.lineP = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineP.setAlignment(QtCore.Qt.AlignCenter)
        self.lineP.setObjectName("lineP")
        self.lineP.setText("102900")
        self.layoutParamPrimaires.addWidget(self.lineP, 7, 2, 1, 1)

        self.lineT = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineT.setAlignment(QtCore.Qt.AlignCenter)
        self.lineT.setObjectName("lineT")
        self.lineT.setText("285")
        self.layoutParamPrimaires.addWidget(self.lineT, 8, 2, 1, 1)

        self.linealpha = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.linealpha.setAlignment(QtCore.Qt.AlignCenter)
        self.linealpha.setObjectName("linealpha")
        self.linealpha.setText("0")
        self.layoutParamPrimaires.addWidget(self.linealpha, 9, 2, 1, 1)

        ##______________Radio buttons

        self.buttonParamPrimaires = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonParamPrimaires.setText("")
        self.buttonParamPrimaires.setObjectName("buttonParamPrimaires")
        self.buttonParamPrimaires.toggled.connect(lambda: self.toggleAllIncer())
        self.layoutParamPrimaires.addWidget(self.buttonParamPrimaires, 0, 3, 1, 1)

        self.buttonv = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonv.setText("")
        self.buttonv.setAutoExclusive(False)
        self.buttonv.setObjectName("buttonv")
        self.buttonv.toggled.connect(lambda: self.enableIncer(self.buttonv, self.lineIncerv, self.boxv, self.copybuttonv, self.label_17))
        self.layoutParamPrimaires.addWidget(self.buttonv, 2, 3, 1, 1)

        self.buttonm = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonm.setText("")
        self.buttonm.setAutoExclusive(False)
        self.buttonm.setObjectName("buttonm")
        self.buttonm.toggled.connect(lambda: self.enableIncer(self.buttonm, self.lineIncerm, self.boxm, self.copybuttonm, self.label_18))
        self.layoutParamPrimaires.addWidget(self.buttonm, 3, 3, 1, 1)

        self.buttonp = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonp.setText("")
        self.buttonp.setAutoExclusive(False)
        self.buttonp.setObjectName("buttonp")
        self.buttonp.toggled.connect(lambda: self.enableIncer(self.buttonp, self.lineIncerp, self.boxp, self.copybuttonp, self.label_19))
        self.layoutParamPrimaires.addWidget(self.buttonp, 4, 3, 1, 1)

        self.buttonSCx = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonSCx.setText("")
        self.buttonSCx.setAutoExclusive(False)
        self.buttonSCx.setObjectName("buttonSCx")
        self.buttonSCx.toggled.connect(lambda: self.enableIncer(self.buttonSCx, self.lineIncerSCx, self.boxSCx, self.copybuttonSCx, self.label_20))
        self.layoutParamPrimaires.addWidget(self.buttonSCx, 5, 3, 1, 1)

        self.buttonh = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonh.setText("")
        self.buttonh.setAutoExclusive(False)
        self.buttonh.setObjectName("buttonh")
        self.buttonh.toggled.connect(lambda: self.enableIncer(self.buttonh, self.lineIncerh, self.boxh, self.copybuttonh, self.label_21))
        self.layoutParamPrimaires.addWidget(self.buttonh, 6, 3, 1, 1)

        self.buttonP = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonP.setText("")
        self.buttonP.setAutoExclusive(False)
        self.buttonP.setObjectName("buttonP")
        self.buttonP.toggled.connect(lambda: self.enableIncer(self.buttonP, self.lineIncerP, self.boxP, self.copybuttonP, self.label_22))
        self.layoutParamPrimaires.addWidget(self.buttonP, 7, 3, 1, 1)

        self.buttonT = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonT.setText("")
        self.buttonT.setAutoExclusive(False)
        self.buttonT.setObjectName("buttonT")
        self.buttonT.toggled.connect(lambda: self.enableIncer(self.buttonT, self.lineIncerT, self.boxT, self.copybuttonT, self.label_23))
        self.layoutParamPrimaires.addWidget(self.buttonT, 8, 3, 1, 1)

        self.buttonalpha = QtWidgets.QRadioButton(self.groupParamPrimaires)
        self.buttonalpha.setText("")
        self.buttonalpha.setAutoExclusive(False)
        self.buttonalpha.setObjectName("buttonalpha")
        self.buttonalpha.toggled.connect(lambda: self.enableIncer(self.buttonalpha, self.lineInceralpha, self.boxalpha, self.copybuttonalpha, self.label_24))
        self.layoutParamPrimaires.addWidget(self.buttonalpha, 9, 3, 1, 1)

        self.buttonx = [self.buttonv, self.buttonm, self.buttonp, self.buttonSCx, self.buttonh, self.buttonP, self.buttonT, self.buttonalpha]

        ##______________Line edit incer

        self.lineIncerv = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerv.setEnabled(False)
        self.lineIncerv.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerv.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerv.setObjectName("lineIncerv")
        self.lineIncerv.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerv, 2, 4, 1, 1)

        self.lineIncerm = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerm.setEnabled(False)
        self.lineIncerm.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerm.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerm.setObjectName("lineIncerm")
        self.lineIncerm.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerm, 3, 4, 1, 1)

        self.lineIncerp = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerp.setEnabled(False)
        self.lineIncerp.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerp.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerp.setObjectName("lineIncerp")
        self.lineIncerp.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerp, 4, 4, 1, 1)

        self.lineIncerSCx = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerSCx.setEnabled(False)
        self.lineIncerSCx.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerSCx.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerSCx.setObjectName("lineIncerSCx")
        self.lineIncerSCx.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerSCx, 5, 4, 1, 1)

        self.lineIncerh = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerh.setEnabled(False)
        self.lineIncerh.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerh.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerh.setObjectName("lineIncerh")
        self.lineIncerh.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerh, 6, 4, 1, 1)

        self.lineIncerP = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerP.setEnabled(False)
        self.lineIncerP.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerP.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerP.setObjectName("lineIncerP")
        self.lineIncerP.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerP, 7, 4, 1, 1)

        self.lineIncerT = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineIncerT.setEnabled(False)
        self.lineIncerT.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineIncerT.setAlignment(QtCore.Qt.AlignCenter)
        self.lineIncerT.setObjectName("lineIncerT")
        self.lineIncerT.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineIncerT, 8, 4, 1, 1)

        self.lineInceralpha = QtWidgets.QLineEdit(self.groupParamPrimaires)
        self.lineInceralpha.setEnabled(False)
        self.lineInceralpha.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineInceralpha.setAlignment(QtCore.Qt.AlignCenter)
        self.lineInceralpha.setObjectName("lineInceralpha")
        self.lineInceralpha.setText("0")
        self.layoutParamPrimaires.addWidget(self.lineInceralpha, 9, 4, 1, 1)

        ##______________ComboBox

        self.boxcyclev = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxcyclev.setObjectName("boxcyclev")
        self.updateCycles()
        self.layoutParamPrimaires.addWidget(self.boxcyclev, 2, 2, 1, 1)

        self.boxv = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxv.setEnabled(False)
        self.boxv.setObjectName("boxv")
        self.boxv.addItem("Incertitude type")
        self.boxv.addItem("Gaussienne")
        self.boxv.addItem("Rectangulaire")
        self.boxv.addItem("Triangle")
        self.boxv.addItem("Normale")
        self.boxv.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxv, 2, 5, 1, 1)

        self.boxm = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxm.setEnabled(False)
        self.boxm.setObjectName("boxm")
        self.boxm.addItem("Incertitude type")
        self.boxm.addItem("Gaussienne")
        self.boxm.addItem("Rectangulaire")
        self.boxm.addItem("Triangle")
        self.boxm.addItem("Normale")
        self.boxm.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxm, 3, 5, 1, 1)

        self.boxp = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxp.setEnabled(False)
        self.boxp.setObjectName("boxp")
        self.boxp.addItem("Incertitude type")
        self.boxp.addItem("Gaussienne")
        self.boxp.addItem("Rectangulaire")
        self.boxp.addItem("Triangle")
        self.boxp.addItem("Normale")
        self.boxp.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxp, 4, 5, 1, 1)

        self.boxSCx = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxSCx.setEnabled(False)
        self.boxSCx.setObjectName("boxSCx")
        self.boxSCx.addItem("Incertitude type")
        self.boxSCx.addItem("Gaussienne")
        self.boxSCx.addItem("Rectangulaire")
        self.boxSCx.addItem("Triangle")
        self.boxSCx.addItem("Normale")
        self.boxSCx.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxSCx, 5, 5, 1, 1)

        self.boxh = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxh.setEnabled(False)
        self.boxh.setObjectName("boxh")
        self.boxh.addItem("Incertitude type")
        self.boxh.addItem("Gaussienne")
        self.boxh.addItem("Rectangulaire")
        self.boxh.addItem("Triangle")
        self.boxh.addItem("Normale")
        self.boxh.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxh, 6, 5, 1, 1)

        self.boxP = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxP.setEnabled(False)
        self.boxP.setObjectName("boxP")
        self.boxP.addItem("Incertitude type")
        self.boxP.addItem("Gaussienne")
        self.boxP.addItem("Rectangulaire")
        self.boxP.addItem("Triangle")
        self.boxP.addItem("Normale")
        self.boxP.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxP, 7, 5, 1, 1)

        self.boxT = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxT.setEnabled(False)
        self.boxT.setObjectName("boxT")
        self.boxT.addItem("Incertitude type")
        self.boxT.addItem("Gaussienne")
        self.boxT.addItem("Rectangulaire")
        self.boxT.addItem("Triangle")
        self.boxT.addItem("Normale")
        self.boxT.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxT, 8, 5, 1, 1)

        self.boxalpha = QtWidgets.QComboBox(self.groupParamPrimaires)
        self.boxalpha.setEnabled(False)
        self.boxalpha.setObjectName("boxalpha")
        self.boxalpha.addItem("Incertitude type")
        self.boxalpha.addItem("Gaussienne")
        self.boxalpha.addItem("Rectangulaire")
        self.boxalpha.addItem("Triangle")
        self.boxalpha.addItem("Normale")
        self.boxalpha.addItem("Arcnp.sinus")
        self.layoutParamPrimaires.addWidget(self.boxalpha, 9, 5, 1, 1)

        ##______________Copy button

        self.copybuttonall = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonall.setObjectName("copybuttonall")
        self.copybuttonall.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonall.setMinimumWidth(25)
        self.copybuttonall.setMaximumWidth(25)
        self.copybuttonall.setMinimumHeight(17)
        self.copybuttonall.setMaximumHeight(17)
        self.copybuttonall.pressed.connect(lambda: self.copyAllIncer())
        self.layoutParamPrimaires.addWidget(self.copybuttonall, 0, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonv = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonv.setEnabled(False)
        self.copybuttonv.setObjectName("copybuttonv")
        self.copybuttonv.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonv.setMinimumWidth(25)
        self.copybuttonv.setMaximumWidth(25)
        self.copybuttonv.setMinimumHeight(17)
        self.copybuttonv.setMaximumHeight(17)
        self.copybuttonv.pressed.connect(lambda: self.copyIncer(self.label_17,self.lineIncerv))
        self.layoutParamPrimaires.addWidget(self.copybuttonv, 2, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonm = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonm.setEnabled(False)
        self.copybuttonm.setObjectName("copybuttonm")
        self.copybuttonm.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonm.setMinimumWidth(25)
        self.copybuttonm.setMaximumWidth(25)
        self.copybuttonm.setMinimumHeight(17)
        self.copybuttonm.setMaximumHeight(17)
        self.copybuttonm.pressed.connect(lambda: self.copyIncer(self.label_18,self.lineIncerm))
        self.layoutParamPrimaires.addWidget(self.copybuttonm, 3, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonp = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonp.setEnabled(False)
        self.copybuttonp.setObjectName("copybuttonp")
        self.copybuttonp.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonp.setMinimumWidth(25)
        self.copybuttonp.setMaximumWidth(25)
        self.copybuttonp.setMinimumHeight(17)
        self.copybuttonp.setMaximumHeight(17)
        self.copybuttonp.pressed.connect(lambda: self.copyIncer(self.label_19,self.lineIncerp))
        self.layoutParamPrimaires.addWidget(self.copybuttonp, 4, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonSCx = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonSCx.setEnabled(False)
        self.copybuttonSCx.setObjectName("copybuttonSCx")
        self.copybuttonSCx.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonSCx.setMinimumWidth(25)
        self.copybuttonSCx.setMaximumWidth(25)
        self.copybuttonSCx.setMinimumHeight(17)
        self.copybuttonSCx.setMaximumHeight(17)
        self.copybuttonSCx.pressed.connect(lambda: self.copyIncer(self.label_20,self.lineIncerSCx))
        self.layoutParamPrimaires.addWidget(self.copybuttonSCx, 5, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonh = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonh.setEnabled(False)
        self.copybuttonh.setObjectName("copybuttonh")
        self.copybuttonh.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonh.setMinimumWidth(25)
        self.copybuttonh.setMaximumWidth(25)
        self.copybuttonh.setMinimumHeight(17)
        self.copybuttonh.setMaximumHeight(17)
        self.copybuttonh.pressed.connect(lambda: self.copyIncer(self.label_21,self.lineIncerh))
        self.layoutParamPrimaires.addWidget(self.copybuttonh, 6, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonP = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonP.setEnabled(False)
        self.copybuttonP.setObjectName("copybuttonP")
        self.copybuttonP.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonP.setMinimumWidth(25)
        self.copybuttonP.setMaximumWidth(25)
        self.copybuttonP.setMinimumHeight(17)
        self.copybuttonP.setMaximumHeight(17)
        self.copybuttonP.pressed.connect(lambda: self.copyIncer(self.label_22,self.lineIncerP))
        self.layoutParamPrimaires.addWidget(self.copybuttonP, 7, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonT = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonT.setEnabled(False)
        self.copybuttonT.setObjectName("copybuttonT")
        self.copybuttonT.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonT.setMinimumWidth(25)
        self.copybuttonT.setMaximumWidth(25)
        self.copybuttonT.setMinimumHeight(17)
        self.copybuttonT.setMaximumHeight(17)
        self.copybuttonT.pressed.connect(lambda: self.copyIncer(self.label_23,self.lineIncerT))
        self.layoutParamPrimaires.addWidget(self.copybuttonT, 8, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonalpha = QtWidgets.QPushButton(self.groupParamPrimaires)
        self.copybuttonalpha.setEnabled(False)
        self.copybuttonalpha.setObjectName("copybuttonalpha")
        self.copybuttonalpha.setIcon(QtGui.QIcon(self.path+"/icons/arrow_left.png"))
        self.copybuttonalpha.setMinimumWidth(25)
        self.copybuttonalpha.setMaximumWidth(25)
        self.copybuttonalpha.setMinimumHeight(17)
        self.copybuttonalpha.setMaximumHeight(17)
        self.copybuttonalpha.pressed.connect(lambda: self.copyIncer(self.label_24,self.lineInceralpha))
        self.layoutParamPrimaires.addWidget(self.copybuttonalpha, 9, 6, 1, 1, QtCore.Qt.AlignHCenter)

        self.copybuttonx = [self.copybuttonv, self.copybuttonm, self.copybuttonp, self.copybuttonSCx, self.copybuttonh, self.copybuttonP, self.copybuttonT, self.copybuttonalpha]

        ##______________Labels incer

        self.label_17 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_17.setEnabled(False)
        self.label_17.setObjectName("label_17")
        self.label_17.setText("0")
        self.label_17.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_17, 2, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_18 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_18.setEnabled(False)
        self.label_18.setObjectName("label_18")
        self.label_18.setText("0")
        self.label_18.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_18, 3, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_19 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_19.setEnabled(False)
        self.label_19.setObjectName("label_19")
        self.label_19.setText("0")
        self.label_19.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_19, 4, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_20 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_20.setEnabled(False)
        self.label_20.setObjectName("label_20")
        self.label_20.setText("0")
        self.label_20.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_20, 5, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_21 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_21.setEnabled(False)
        self.label_21.setObjectName("label_21")
        self.label_21.setText("0")
        self.label_21.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_21, 6, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_22 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_22.setEnabled(False)
        self.label_22.setObjectName("label_22")
        self.label_22.setText("0")
        self.label_22.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_22, 7, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_23 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_23.setEnabled(False)
        self.label_23.setObjectName("label_23")
        self.label_23.setText("0")
        self.label_23.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_23, 8, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_24 = QtWidgets.QLabel(self.groupParamPrimaires)
        self.label_24.setEnabled(False)
        self.label_24.setObjectName("label_24")
        self.label_24.setText("0")
        self.label_24.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.layoutParamPrimaires.addWidget(self.label_24, 9, 7, 1, 1, QtCore.Qt.AlignHCenter)

        self.incerConceillee = [self.label_17, self.label_18, self.label_19, self.label_20, self.label_21, self.label_22, self.label_23, self.label_24]

        ##___________Groupe Parametres Secondaires

        self.groupParamSecondaires = QtWidgets.QGroupBox(self.splitter_3)
        self.groupParamSecondaires.setAutoFillBackground(False)
        self.groupParamSecondaires.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.groupParamSecondaires.setObjectName("groupParamSecondaires")
        self.groupParamSecondaires.setTitle("Paramètres secondaires")

        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupParamSecondaires)
        self.gridLayout_3.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_3.setObjectName("gridLayout_3")

        self.gridLayout_3.setColumnStretch(2, 1)
        self.gridLayout_3.setColumnStretch(4, 1)

        ##______________Labels

        #Colonnes

        self.label_3 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_3.setObjectName("label_3")
        self.label_3.setText("Paramètre")
        self.gridLayout_3.addWidget(self.label_3, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_61 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_61.setObjectName("label_61")
        self.label_61.setText("Symbole")
        self.gridLayout_3.addWidget(self.label_61, 1, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.buttonParamSecondaires = QtWidgets.QRadioButton(self.groupParamSecondaires)
        self.buttonParamSecondaires.setText("")
        self.buttonParamSecondaires.setChecked(True)
        self.buttonParamSecondaires.setObjectName("buttonParamSecondaires")
        self.gridLayout_3.addWidget(self.buttonParamSecondaires, 1, 3, 1, 1)

        self.label_25 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_25.setObjectName("label_25")
        self.label_25.setText("Valeur")
        self.gridLayout_3.addWidget(self.label_25, 1, 2, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_26 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_26.setObjectName("label_26")
        self.label_26.setText("Mode de calcul")
        self.gridLayout_3.addWidget(self.label_26, 1, 4, 1, 1, QtCore.Qt.AlignHCenter)

        #Paramètres

        self.label_27 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_27.setObjectName("label_27")
        self.label_27.setText("Masse volumique de l\'air (kg.m⁻³)")
        self.gridLayout_3.addWidget(self.label_27, 3, 0, 1, 1)

        self.label_28 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_28.setObjectName("label_28")
        self.label_28.setText("Coefficient résistance au roulement")
        self.gridLayout_3.addWidget(self.label_28, 4, 0, 1, 1)

        self.label_29 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_29.setObjectName("label_29")
        self.label_29.setText("Intensité gravitationnelle (m.s⁻²)")
        self.gridLayout_3.addWidget(self.label_29, 5, 0, 1, 1)

        self.label_30 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_30.setObjectName("label_30")
        self.label_30.setText("Rendement en phase de traction")
        self.gridLayout_3.addWidget(self.label_30, 6, 0, 1, 1)

        self.label_66 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_66.setObjectName("label_66")
        self.label_66.setText("Rendement en phase de regénération")
        self.gridLayout_3.addWidget(self.label_66, 7, 0, 1, 1)

        #Symboles

        self.label_62 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_62.setObjectName("label_62")
        self.label_62.setText("rho")
        self.gridLayout_3.addWidget(self.label_62, 3, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_63 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_63.setObjectName("label_63")
        self.label_63.setText("Crr")
        self.gridLayout_3.addWidget(self.label_63, 4, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_64 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_64.setObjectName("label_64")
        self.label_64.setText("g")
        self.gridLayout_3.addWidget(self.label_64, 5, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_65 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_65.setObjectName("label_65")
        self.label_65.setText("rMot")
        self.gridLayout_3.addWidget(self.label_65, 6, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_67 = QtWidgets.QLabel(self.groupParamSecondaires)
        self.label_67.setObjectName("label_67")
        self.label_67.setText("rReg")
        self.gridLayout_3.addWidget(self.label_67, 7, 1, 1, 1, QtCore.Qt.AlignHCenter)

        #Line

        self.line_2 = QtWidgets.QFrame(self.groupParamSecondaires)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_3.addWidget(self.line_2, 2, 0, 1, 5)

        ## ______________Line edit valeurs

        self.linerho = QtWidgets.QLineEdit(self.groupParamSecondaires)
        self.linerho.setAlignment(QtCore.Qt.AlignCenter)
        self.linerho.setObjectName("linerho")
        self.linerho.setText("1.292")
        self.gridLayout_3.addWidget(self.linerho, 3, 2, 1, 1)

        self.lineCrr = QtWidgets.QLineEdit(self.groupParamSecondaires)
        self.lineCrr.setAlignment(QtCore.Qt.AlignCenter)
        self.lineCrr.setObjectName("lineCrr")
        self.lineCrr.setText("0.01")
        self.gridLayout_3.addWidget(self.lineCrr, 4, 2, 1, 1)

        self.lineg = QtWidgets.QLineEdit(self.groupParamSecondaires)
        self.lineg.setAlignment(QtCore.Qt.AlignCenter)
        self.lineg.setObjectName("lineg")
        self.lineg.setText("9.81")
        self.gridLayout_3.addWidget(self.lineg, 5, 2, 1, 1)

        self.linerMot = QtWidgets.QLineEdit(self.groupParamSecondaires)
        self.linerMot.setAlignment(QtCore.Qt.AlignCenter)
        self.linerMot.setObjectName("linerMot")
        self.linerMot.setText("0.8216")
        self.gridLayout_3.addWidget(self.linerMot, 6, 2, 1, 1)

        self.linerReg = QtWidgets.QLineEdit(self.groupParamSecondaires)
        self.linerReg.setAlignment(QtCore.Qt.AlignCenter)
        self.linerReg.setObjectName("linerReg")
        self.linerReg.setText("0.6774")
        self.gridLayout_3.addWidget(self.linerReg, 7, 2, 1, 1)

        ##______________ComboBox

        self.boxrho = QtWidgets.QComboBox(self.groupParamSecondaires)
        self.boxrho.setObjectName("boxrho")
        self.boxrho.addItem("Valeur nominale")
        self.boxrho.addItem("Fonction de P et T")
        self.boxrho.addItem("Fonction de h et T")
        self.gridLayout_3.addWidget(self.boxrho, 3, 4, 1, 1)

        self.boxCrr = QtWidgets.QComboBox(self.groupParamSecondaires)
        self.boxCrr.setObjectName("boxCrr")
        self.boxCrr.addItem("Valeur nominale")
        self.boxCrr.addItem("Fonction de p et v")
        self.gridLayout_3.addWidget(self.boxCrr, 4, 4, 1, 1)

        self.boxg = QtWidgets.QComboBox(self.groupParamSecondaires)
        self.boxg.setObjectName("boxg")
        self.boxg.addItem("Valeur nominale")
        self.boxg.addItem("Fonction de h")
        self.gridLayout_3.addWidget(self.boxg, 5, 4, 1, 1)

        self.boxrMot = QtWidgets.QComboBox(self.groupParamSecondaires)
        self.boxrMot.setObjectName("boxrMot")
        self.boxrMot.addItem("Valeur nominale")
        self.boxrMot.addItem("Valeur calculée")
        self.gridLayout_3.addWidget(self.boxrMot, 6, 4, 1, 1)

        self.boxrReg = QtWidgets.QComboBox(self.groupParamSecondaires)
        self.boxrReg.setObjectName("boxrReg")
        self.boxrReg.addItem("Valeur nominale")
        self.boxrReg.addItem("Valeur calculée")
        self.gridLayout_3.addWidget(self.boxrReg, 7, 4, 1, 1)

        ##______SubTab Equations

        self.Equations = QtWidgets.QWidget()
        self.Equations.setObjectName("Equations")
        self.tabParametres.addTab(self.Equations, QtGui.QIcon(self.path+"/icons/sum.png"), "Equations")

        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.Equations)
        self.verticalLayout_5.setObjectName("verticalLayout_5")

        ##_________Splitter

        self.splitter_4 = QtWidgets.QSplitter(self.Equations)
        self.splitter_4.setOrientation(QtCore.Qt.Vertical)
        self.splitter_4.setObjectName("splitter_4")
        self.verticalLayout_5.addWidget(self.splitter_4)

        ##____________Groupe Constantes

        self.groupConstantes = QtWidgets.QGroupBox(self.splitter_4)
        self.groupConstantes.setObjectName("groupConstantes")
        self.groupConstantes.setTitle("Constantes")

        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupConstantes)
        self.gridLayout_4.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_4.setObjectName("gridLayout_4")

        ##_______________Labels

        #Colonnes

        self.label_5 = QtWidgets.QLabel(self.groupConstantes)
        self.label_5.setObjectName("label_5")
        self.label_5.setText("Constante")
        self.gridLayout_4.addWidget(self.label_5, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_39 = QtWidgets.QLabel(self.groupConstantes)
        self.label_39.setObjectName("label_39")
        self.label_39.setText("Symbole")
        self.gridLayout_4.addWidget(self.label_39, 0, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.buttonConstantes = QtWidgets.QRadioButton(self.groupConstantes)
        self.buttonConstantes.setText("")
        self.buttonConstantes.setObjectName("buttonConstantes")
        self.buttonConstantes.toggled.connect(lambda: self.enableAllLines(self.buttonConstantes, self.gridLayout_4))
        self.gridLayout_4.addWidget(self.buttonConstantes, 0, 2, 1, 1)

        self.label_51 = QtWidgets.QLabel(self.groupConstantes)
        self.label_51.setObjectName("label_51")
        self.label_51.setText("Valeur")
        self.gridLayout_4.addWidget(self.label_51, 0, 3, 1, 1, QtCore.Qt.AlignHCenter)

        self.line_3 = QtWidgets.QFrame(self.groupConstantes)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_4.addWidget(self.line_3, 1, 0, 1, 4)

        #Constantes

        self.label_35 = QtWidgets.QLabel(self.groupConstantes)
        self.label_35.setObjectName("label_35")
        self.label_35.setText("Masse molaire de l\'air (kg/mol)")
        self.gridLayout_4.addWidget(self.label_35, 5, 0, 1, 1)

        self.label_36 = QtWidgets.QLabel(self.groupConstantes)
        self.label_36.setObjectName("label_36")
        self.label_36.setText("Constante des gaz parfaits")
        self.gridLayout_4.addWidget(self.label_36, 6, 0, 1, 1)

        self.label_37 = QtWidgets.QLabel(self.groupConstantes)
        self.label_37.setObjectName("label_37")
        self.label_37.setText("Pression atmosphérique à h=0 (Pa)")
        self.gridLayout_4.addWidget(self.label_37, 7, 0, 1, 1)

        self.line_5 = QtWidgets.QFrame(self.groupConstantes)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout_4.addWidget(self.line_5, 8, 0, 1, 4)

        self.label_38 = QtWidgets.QLabel(self.groupConstantes)
        self.label_38.setObjectName("label_38")
        self.label_38.setText("Coefficient de Crr 0")
        self.gridLayout_4.addWidget(self.label_38, 9, 0, 1, 1)

        self.label_47 = QtWidgets.QLabel(self.groupConstantes)
        self.label_47.setObjectName("label_47")
        self.label_47.setText("Coefficient de Crr 1")
        self.gridLayout_4.addWidget(self.label_47, 10, 0, 1, 1)

        self.label_48 = QtWidgets.QLabel(self.groupConstantes)
        self.label_48.setObjectName("label_48")
        self.label_48.setText("Coefficient de Crr 2")
        self.gridLayout_4.addWidget(self.label_48, 11, 0, 1, 1)

        self.line_6 = QtWidgets.QFrame(self.groupConstantes)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_4.addWidget(self.line_6, 12, 0, 1, 4)

        self.label_33 = QtWidgets.QLabel(self.groupConstantes)
        self.label_33.setObjectName("label_33")
        self.label_33.setText("Constante gravitationnelle")
        self.gridLayout_4.addWidget(self.label_33, 13, 0, 1, 1)

        self.label_32 = QtWidgets.QLabel(self.groupConstantes)
        self.label_32.setObjectName("label_32")
        self.label_32.setText("Masse de la Terre (kg)")
        self.gridLayout_4.addWidget(self.label_32, 14, 0, 1, 1)

        self.label_34 = QtWidgets.QLabel(self.groupConstantes)
        self.label_34.setObjectName("label_34")
        self.label_34.setText("Rayon de la Terre (m)")
        self.gridLayout_4.addWidget(self.label_34, 15, 0, 1, 1)

        #Symboles

        self.label_43 = QtWidgets.QLabel(self.groupConstantes)
        self.label_43.setObjectName("label_43")
        self.label_43.setText("M")
        self.gridLayout_4.addWidget(self.label_43, 5, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_44 = QtWidgets.QLabel(self.groupConstantes)
        self.label_44.setObjectName("label_44")
        self.label_44.setText("R")
        self.gridLayout_4.addWidget(self.label_44, 6, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_45 = QtWidgets.QLabel(self.groupConstantes)
        self.label_45.setObjectName("label_45")
        self.label_45.setText("P0")
        self.gridLayout_4.addWidget(self.label_45, 7, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_46 = QtWidgets.QLabel(self.groupConstantes)
        self.label_46.setObjectName("label_46")
        self.label_46.setText("λ0")
        self.gridLayout_4.addWidget(self.label_46, 9, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_49 = QtWidgets.QLabel(self.groupConstantes)
        self.label_49.setObjectName("label_49")
        self.label_49.setText("λ1")
        self.gridLayout_4.addWidget(self.label_49, 10, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_50 = QtWidgets.QLabel(self.groupConstantes)
        self.label_50.setObjectName("label_50")
        self.label_50.setText("λ2")
        self.gridLayout_4.addWidget(self.label_50, 11, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_41 = QtWidgets.QLabel(self.groupConstantes)
        self.label_41.setObjectName("label_41")
        self.label_41.setText("G")
        self.gridLayout_4.addWidget(self.label_41, 13, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_40 = QtWidgets.QLabel(self.groupConstantes)
        self.label_40.setObjectName("label_40")
        self.label_40.setText("Mt")
        self.gridLayout_4.addWidget(self.label_40, 14, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_42 = QtWidgets.QLabel(self.groupConstantes)
        self.label_42.setObjectName("label_42")
        self.label_42.setText("Rt")
        self.gridLayout_4.addWidget(self.label_42, 15, 1, 1, 1, QtCore.Qt.AlignHCenter)

        ##_______________Line edit valeurs

        self.lineM = QtWidgets.QLineEdit(self.groupConstantes)
        self.lineM.setAlignment(QtCore.Qt.AlignCenter)
        self.lineM.setEnabled(False)
        self.lineM.setObjectName("lineM")
        self.gridLayout_4.addWidget(self.lineM, 5, 3, 1, 1)

        self.lineR = QtWidgets.QLineEdit(self.groupConstantes)
        self.lineR.setAlignment(QtCore.Qt.AlignCenter)
        self.lineR.setEnabled(False)
        self.lineR.setObjectName("lineR")
        self.lineR.setText("8.314")
        self.gridLayout_4.addWidget(self.lineR, 6, 3, 1, 1)

        self.lineP0 = QtWidgets.QLineEdit(self.groupConstantes)
        self.lineP0.setAlignment(QtCore.Qt.AlignCenter)
        self.lineP0.setEnabled(False)
        self.lineP0.setObjectName("lineP0")
        self.lineP0.setText("101325")
        self.gridLayout_4.addWidget(self.lineP0, 7, 3, 1, 1)

        self.linelambda0 = QtWidgets.QLineEdit(self.groupConstantes)
        self.linelambda0.setAlignment(QtCore.Qt.AlignCenter)
        self.linelambda0.setEnabled(False)
        self.linelambda0.setObjectName("linelambda0")
        self.linelambda0.setText("0.005")
        self.gridLayout_4.addWidget(self.linelambda0, 9, 3, 1, 1)

        self.linelambda1 = QtWidgets.QLineEdit(self.groupConstantes)
        self.linelambda1.setAlignment(QtCore.Qt.AlignCenter)
        self.linelambda1.setEnabled(False)
        self.linelambda1.setObjectName("linelambda1")
        self.linelambda1.setText("1000")
        self.gridLayout_4.addWidget(self.linelambda1, 10, 3, 1, 1)

        self.linelambda2 = QtWidgets.QLineEdit(self.groupConstantes)
        self.linelambda2.setAlignment(QtCore.Qt.AlignCenter)
        self.linelambda2.setEnabled(False)
        self.linelambda2.setObjectName("linelambda2")
        self.linelambda2.setText("1.2312")
        self.gridLayout_4.addWidget(self.linelambda2, 11, 3, 1, 1)

        self.lineG = QtWidgets.QLineEdit(self.groupConstantes)
        self.lineG.setAlignment(QtCore.Qt.AlignCenter)
        self.lineG.setEnabled(False)
        self.lineG.setObjectName("lineG")
        self.lineG.setText("6.6742e-11")
        self.gridLayout_4.addWidget(self.lineG, 13, 3, 1, 1)

        self.lineMt = QtWidgets.QLineEdit(self.groupConstantes)
        self.lineMt.setAlignment(QtCore.Qt.AlignCenter)
        self.lineMt.setEnabled(False)
        self.lineMt.setObjectName("lineMt")
        self.lineMt.setText("5.9722e+24")
        self.lineM.setText("0.028965")
        self.gridLayout_4.addWidget(self.lineMt, 14, 3, 1, 1)

        self.lineRt = QtWidgets.QLineEdit(self.groupConstantes)
        self.lineRt.setAlignment(QtCore.Qt.AlignCenter)
        self.lineRt.setEnabled(False)
        self.lineRt.setObjectName("lineRt")
        self.lineRt.setText("6373000")
        self.gridLayout_4.addWidget(self.lineRt, 15, 3, 1, 1)

        ##____________Groupe Equations

        self.groupEquations = QtWidgets.QGroupBox(self.splitter_4)
        self.groupEquations.setObjectName("groupEquations")
        self.groupEquations.setTitle("Equations")


        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupEquations)
        self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_5.setObjectName("gridLayout_5")

        ##_______________Labels

        #Colonnes

        self.label_4 = QtWidgets.QLabel(self.groupEquations)
        self.label_4.setObjectName("label_4")
        self.label_4.setText("Paramètre")
        self.gridLayout_5.addWidget(self.label_4, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_73 = QtWidgets.QLabel(self.groupEquations)
        self.label_73.setObjectName("label_73")
        self.label_73.setText("Symbole")
        self.gridLayout_5.addWidget(self.label_73, 0, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.buttonEquations = QtWidgets.QRadioButton(self.groupEquations)
        self.buttonEquations.setText("")
        self.buttonEquations.setObjectName("buttonEquations")
        self.buttonEquations.toggled.connect(lambda: self.enableAllLines(self.buttonEquations, self.gridLayout_5))
        self.gridLayout_5.addWidget(self.buttonEquations, 0, 2, 1, 1)

        self.label_79 = QtWidgets.QLabel(self.groupEquations)
        self.label_79.setObjectName("label_79")
        self.label_79.setText("Equation")
        self.gridLayout_5.addWidget(self.label_79, 0, 3, 1, 1, QtCore.Qt.AlignHCenter)

        self.line_4 = QtWidgets.QFrame(self.groupEquations)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_5.addWidget(self.line_4, 1, 0, 1, 4)

        #Paramètres

        self.label_68 = QtWidgets.QLabel(self.groupEquations)
        self.label_68.setObjectName("label_68")
        self.label_68.setText("Masse volumique de l\'air")
        self.gridLayout_5.addWidget(self.label_68, 2, 0, 1, 1)

        self.label_69 = QtWidgets.QLabel(self.groupEquations)
        self.label_69.setObjectName("label_69")
        self.label_69.setText("Coefficient de résistance au roulement")
        self.gridLayout_5.addWidget(self.label_69, 4, 0, 1, 1)

        self.label_70 = QtWidgets.QLabel(self.groupEquations)
        self.label_70.setObjectName("label_70")
        self.label_70.setText("Intensité gravitationnelle")
        self.gridLayout_5.addWidget(self.label_70, 5, 0, 1, 1)

        #Symboles



        self.label_74 = QtWidgets.QLabel(self.groupEquations)
        self.label_74.setObjectName("label_74")
        self.label_74.setText("rho")
        self.gridLayout_5.addWidget(self.label_74, 2, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_75 = QtWidgets.QLabel(self.groupEquations)
        self.label_75.setObjectName("label_75")
        self.label_75.setText("Crr")
        self.gridLayout_5.addWidget(self.label_75, 4, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_76 = QtWidgets.QLabel(self.groupEquations)
        self.label_76.setObjectName("label_76")
        self.label_76.setText("g")
        self.gridLayout_5.addWidget(self.label_76, 5, 1, 1, 1, QtCore.Qt.AlignHCenter)

        ##_______________Line edit equations

        self.linerhoEquation1 = QtWidgets.QLineEdit(self.groupEquations)
        self.linerhoEquation1.setAlignment(QtCore.Qt.AlignCenter)
        self.linerhoEquation1.setEnabled(False)
        self.linerhoEquation1.setObjectName("linerhoEquation1")
        self.linerhoEquation1.setText("P*M/(R*T)")
        self.gridLayout_5.addWidget(self.linerhoEquation1, 2, 3, 1, 1)

        self.linerhoEquation2 = QtWidgets.QLineEdit(self.groupEquations)
        self.linerhoEquation2.setAlignment(QtCore.Qt.AlignCenter)
        self.linerhoEquation2.setEnabled(False)
        self.linerhoEquation2.setObjectName("linerhoEquation2")
        self.linerhoEquation2.setText("P0*M*np.exp(-h*M*g/(R*T))/(R*T)")
        self.gridLayout_5.addWidget(self.linerhoEquation2, 3, 3, 1, 1)

        self.lineCrrEquation = QtWidgets.QLineEdit(self.groupEquations)
        self.lineCrrEquation.setAlignment(QtCore.Qt.AlignCenter)
        self.lineCrrEquation.setEnabled(False)
        self.lineCrrEquation.setObjectName("lineCrrEquation")
        self.lineCrrEquation.setText("lambda0+1/p*(lambda1+lambda2*v**2)")
        self.gridLayout_5.addWidget(self.lineCrrEquation, 4, 3, 1, 1)

        self.linegEquation = QtWidgets.QLineEdit(self.groupEquations)
        self.linegEquation.setAlignment(QtCore.Qt.AlignCenter)
        self.linegEquation.setEnabled(False)
        self.linegEquation.setObjectName("linegEquation")
        self.linegEquation.setText("(G*Mt)/((Rt+h)**2)")
        self.gridLayout_5.addWidget(self.linegEquation, 5, 3, 1, 1)


        ##___Tab Resultats

        self.tadResultats = QtWidgets.QTabWidget(self.splitter)
        self.tadResultats.setObjectName("tadResultats")
        self.splitter.setStretchFactor(1,2)


        ##______SubTab Graphes

        self.Graphes = QtWidgets.QWidget()
        self.Graphes.setObjectName("Graphes")
        self.tadResultats.addTab(self.Graphes, QtGui.QIcon(self.path+"/icons/chart_curve.png"), "Graphes")

        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.Graphes)
        self.verticalLayout_3.setObjectName("verticalLayout_3")

        ##_________Splitter

        self.splitter_2 = QtWidgets.QSplitter(self.Graphes)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.verticalLayout_3.addWidget(self.splitter_2)

        ##____________Groupe Vitesse

        self.groupVitesse = QtWidgets.QGroupBox(self.splitter_2)
        self.groupVitesse.setObjectName("groupVitesse")
        self.groupVitesse.setTitle("Vitesse")
        self.splitter_2.setStretchFactor(0,2)

        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupVitesse)
        self.verticalLayout.setObjectName("verticalLayout")

        ##_______________Graph Vitesse

        self.graphicVitesse = pyg.PlotWidget(self.groupVitesse)
        self.graphicVitesse.setObjectName("graphicVitesse")
        self.verticalLayout.addWidget(self.graphicVitesse)

        ##____________Groupe Etrac

        self.groupEtrac = QtWidgets.QGroupBox(self.splitter_2)
        self.groupEtrac.setObjectName("groupEtrac")
        self.groupEtrac.setTitle("Energie de traction")
        self.splitter_2.setStretchFactor(1,4)

        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupEtrac)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        ##_______________Graph Etrac

        self.graphicEtrac = pyg.PlotWidget(self.groupEtrac)
        self.graphicEtrac.setObjectName("graphicEtrac")
        self.verticalLayout_2.addWidget(self.graphicEtrac)

        ##____________Groupe Incertitudes

        self.groupIncertitude = QtWidgets.QGroupBox(self.splitter_2)
        self.groupIncertitude.setObjectName("groupIncertitude")
        self.groupIncertitude.setTitle("Incertitude de l\'énergie de traction")
        self.splitter_2.setStretchFactor(2,1)

        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.groupIncertitude)
        self.verticalLayout_6.setObjectName("verticalLayout_6")

        ##_______________Tableau Etrac

        self.tableEtrac = QtWidgets.QTableWidget(self.groupIncertitude)
        self.verticalLayout_6.addWidget(self.tableEtrac)

        self.tableEtrac.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableEtrac.setDragDropOverwriteMode(False)
        self.tableEtrac.setObjectName("tableEtrac")
        self.tableEtrac.setColumnCount(3)
        self.tableEtrac.setRowCount(3)

        for c in range(0,3):
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.tableEtrac.setHorizontalHeaderItem(c, item)
            self.tableEtrac.horizontalHeader().setSectionResizeMode(c, QtWidgets.QHeaderView.Stretch)
        for r in range(0,3):
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.tableEtrac.setVerticalHeaderItem(r, item)
            self.tableEtrac.verticalHeader().setSectionResizeMode(r, QtWidgets.QHeaderView.Stretch)
            for c in range(0,3):
                item = QtWidgets.QTableWidgetItem()
                font = QtGui.QFont()
                font.setPointSize(8)
                font.setKerning(True)
                item.setFont(font)
                item.setText("0")
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                item.setFlags(QtCore.Qt.ItemIsEnabled)
                self.tableEtrac.setItem(r, c, item)

        self.tableEtrac.verticalHeaderItem(0).setText("Etrac")
        self.tableEtrac.verticalHeaderItem(1).setText("Incertitude")
        self.tableEtrac.verticalHeaderItem(2).setText("Incertitude\nrelative")
        self.tableEtrac.horizontalHeaderItem(0).setText("Résultat")
        self.tableEtrac.horizontalHeaderItem(1).setText("Résultat précédent")
        self.tableEtrac.horizontalHeaderItem(2).setText("Différence")


        ##______SubTab Incertitudes

        self.Incertitudes = QtWidgets.QWidget()
        self.Incertitudes.setObjectName("Incertitudes")
        self.tadResultats.addTab(self.Incertitudes, QtGui.QIcon(self.path+"/icons/table.png"), "Incertitudes / Poids")

        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.Incertitudes)
        self.verticalLayout_7.setObjectName("verticalLayout_7")

        ##_________Grid Layout

        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_7.addLayout(self.gridLayout)

        ##____________Groupe Faero

        self.groupBox = QtWidgets.QGroupBox(self.Incertitudes)
        self.groupBox.setObjectName("groupBox")
        self.groupBox.setTitle("Force aérodynamique")
        self.gridLayout.addWidget(self.groupBox, 0, 0, 1, 1)

        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_7.setObjectName("gridLayout_7")

        ##_______________Labels

        self.label_78 = QtWidgets.QLabel(self.groupBox)
        self.label_78.setObjectName("label_78")
        self.label_78.setText("Incertitude")
        self.gridLayout_7.addWidget(self.label_78, 0, 0, 1, 1)

        self.label_83 = QtWidgets.QLabel(self.groupBox)
        self.label_83.setObjectName("label_83")
        self.label_83.setText("Part de l\'incertitude :")
        self.gridLayout_7.addWidget(self.label_83, 1, 0, 1, 2)

        self.label_84 = QtWidgets.QLabel(self.groupBox)
        self.label_84.setObjectName("label_84")
        self.label_84.setText("v")
        self.gridLayout_7.addWidget(self.label_84, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_85 = QtWidgets.QLabel(self.groupBox)
        self.label_85.setObjectName("label_85")
        self.label_85.setText("SCx")
        self.gridLayout_7.addWidget(self.label_85, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_86 = QtWidgets.QLabel(self.groupBox)
        self.label_86.setObjectName("label_86")
        self.label_86.setText("rho")
        self.gridLayout_7.addWidget(self.label_86, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_87 = QtWidgets.QLabel(self.groupBox)
        self.label_87.setObjectName("label_87")
        self.label_87.setText("(h)")
        self.gridLayout_7.addWidget(self.label_87, 5, 0, 1, 1, QtCore.Qt.AlignRight)

        self.label_88 = QtWidgets.QLabel(self.groupBox)
        self.label_88.setObjectName("label_88")
        self.label_88.setText("(P)")
        self.gridLayout_7.addWidget(self.label_88, 6, 0, 1, 1, QtCore.Qt.AlignRight)

        self.label_89 = QtWidgets.QLabel(self.groupBox)
        self.label_89.setObjectName("label_89")
        self.label_89.setText("(T)")
        self.gridLayout_7.addWidget(self.label_89, 7, 0, 1, 1, QtCore.Qt.AlignRight)

        ##_______________Line edit valeurs

        self.incerFaero = QtWidgets.QLineEdit(self.groupBox)
        self.incerFaero.setAlignment(QtCore.Qt.AlignCenter)
        self.incerFaero.setObjectName("incerFaero")
        self.incerFaero.setReadOnly(True)
        self.incerFaero.setText("0")
        self.gridLayout_7.addWidget(self.incerFaero, 0, 1, 1, 1)

        self.Faerov = QtWidgets.QLineEdit(self.groupBox)
        self.Faerov.setAlignment(QtCore.Qt.AlignCenter)
        self.Faerov.setObjectName("Faerov")
        self.Faerov.setReadOnly(True)
        self.Faerov.setText("0 %")
        self.gridLayout_7.addWidget(self.Faerov, 2, 1, 1, 1)

        self.FaeroSCx = QtWidgets.QLineEdit(self.groupBox)
        self.FaeroSCx.setAlignment(QtCore.Qt.AlignCenter)
        self.FaeroSCx.setObjectName("FaeroSCx")
        self.FaeroSCx.setReadOnly(True)
        self.FaeroSCx.setText("0 %")
        self.gridLayout_7.addWidget(self.FaeroSCx, 3, 1, 1, 1)

        self.FaeroRho = QtWidgets.QLineEdit(self.groupBox)
        self.FaeroRho.setAlignment(QtCore.Qt.AlignCenter)
        self.FaeroRho.setObjectName("FaeroRho")
        self.FaeroRho.setReadOnly(True)
        self.FaeroRho.setText("0 %")
        self.gridLayout_7.addWidget(self.FaeroRho, 4, 1, 1, 1)

        self.Faeroh = QtWidgets.QLineEdit(self.groupBox)
        self.Faeroh.setAlignment(QtCore.Qt.AlignCenter)
        self.Faeroh.setObjectName("Faeroh")
        self.Faeroh.setReadOnly(True)
        self.Faeroh.setText("0 %")
        self.gridLayout_7.addWidget(self.Faeroh, 5, 1, 1, 1)

        self.FaeroP = QtWidgets.QLineEdit(self.groupBox)
        self.FaeroP.setAlignment(QtCore.Qt.AlignCenter)
        self.FaeroP.setObjectName("FaeroP")
        self.FaeroP.setReadOnly(True)
        self.FaeroP.setText("0 %")
        self.gridLayout_7.addWidget(self.FaeroP, 6, 1, 1, 1)

        self.FaeroT = QtWidgets.QLineEdit(self.groupBox)
        self.FaeroT.setAlignment(QtCore.Qt.AlignCenter)
        self.FaeroT.setObjectName("FaeroT")
        self.FaeroT.setReadOnly(True)
        self.FaeroT.setText("0 %")
        self.gridLayout_7.addWidget(self.FaeroT, 7, 1, 1, 1)







        ##____________Groupe Force resistance

        self.groupBox_3 = QtWidgets.QGroupBox(self.Incertitudes)
        self.groupBox_3.setObjectName("groupBox_3")
        self.groupBox_3.setTitle("Force résistance au roulement")
        self.gridLayout.addWidget(self.groupBox_3, 0, 1, 1, 1)

        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_8.setObjectName("gridLayout_8")


        ##_______________Labels

        self.label_80 = QtWidgets.QLabel(self.groupBox_3)
        self.label_80.setObjectName("label_80")
        self.label_80.setText("Incertittude")
        self.gridLayout_8.addWidget(self.label_80, 0, 0, 1, 1)

        self.label_90 = QtWidgets.QLabel(self.groupBox_3)
        self.label_90.setObjectName("label_90")
        self.label_90.setText("Part de l\'incertitude :")
        self.gridLayout_8.addWidget(self.label_90, 1, 0, 1, 2)

        self.label_91 = QtWidgets.QLabel(self.groupBox_3)
        self.label_91.setObjectName("label_91")
        self.label_91.setText("m")
        self.gridLayout_8.addWidget(self.label_91, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_92 = QtWidgets.QLabel(self.groupBox_3)
        self.label_92.setObjectName("label_92")
        self.label_92.setText("alpha")
        self.gridLayout_8.addWidget(self.label_92, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_93 = QtWidgets.QLabel(self.groupBox_3)
        self.label_93.setObjectName("label_93")
        self.label_93.setText("Crr")
        self.gridLayout_8.addWidget(self.label_93, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_94 = QtWidgets.QLabel(self.groupBox_3)
        self.label_94.setObjectName("label_94")
        self.label_94.setText("(v)")
        self.gridLayout_8.addWidget(self.label_94, 5, 0, 1, 1, QtCore.Qt.AlignRight)

        self.label_95 = QtWidgets.QLabel(self.groupBox_3)
        self.label_95.setObjectName("label_95")
        self.label_95.setText("(p)")
        self.gridLayout_8.addWidget(self.label_95, 6, 0, 1, 1, QtCore.Qt.AlignRight)

        self.label_96 = QtWidgets.QLabel(self.groupBox_3)
        self.label_96.setObjectName("label_96")
        self.label_96.setText("g(h)")
        self.gridLayout_8.addWidget(self.label_96, 7, 0, 1, 1, QtCore.Qt.AlignHCenter)

        ##_______________Line edit valeurs

        self.incerFrr = QtWidgets.QLineEdit(self.groupBox_3)
        self.incerFrr.setAlignment(QtCore.Qt.AlignCenter)
        self.incerFrr.setObjectName("incerFrr")
        self.incerFrr.setReadOnly(True)
        self.incerFrr.setText("0")
        self.gridLayout_8.addWidget(self.incerFrr, 0, 1, 1, 1)

        self.Frrm = QtWidgets.QLineEdit(self.groupBox_3)
        self.Frrm.setAlignment(QtCore.Qt.AlignCenter)
        self.Frrm.setObjectName("Frrm")
        self.Frrm.setReadOnly(True)
        self.Frrm.setText("0%")
        self.gridLayout_8.addWidget(self.Frrm, 2, 1, 1, 1)

        self.Frralpha = QtWidgets.QLineEdit(self.groupBox_3)
        self.Frralpha.setAlignment(QtCore.Qt.AlignCenter)
        self.Frralpha.setObjectName("Frralpha")
        self.Frralpha.setReadOnly(True)
        self.Frralpha.setText("0%")
        self.gridLayout_8.addWidget(self.Frralpha, 3, 1, 1, 1)

        self.FrrCrr = QtWidgets.QLineEdit(self.groupBox_3)
        self.FrrCrr.setAlignment(QtCore.Qt.AlignCenter)
        self.FrrCrr.setObjectName("FrrCrr")
        self.FrrCrr.setReadOnly(True)
        self.FrrCrr.setText("0%")
        self.gridLayout_8.addWidget(self.FrrCrr, 4, 1, 1, 1)

        self.Frrv = QtWidgets.QLineEdit(self.groupBox_3)
        self.Frrv.setAlignment(QtCore.Qt.AlignCenter)
        self.Frrv.setObjectName("Frrv")
        self.Frrv.setReadOnly(True)
        self.Frrv.setText("0%")
        self.gridLayout_8.addWidget(self.Frrv, 5, 1, 1, 1)

        self.Frrp = QtWidgets.QLineEdit(self.groupBox_3)
        self.Frrp.setAlignment(QtCore.Qt.AlignCenter)
        self.Frrp.setObjectName("Frrp")
        self.Frrp.setReadOnly(True)
        self.Frrp.setText("0%")
        self.gridLayout_8.addWidget(self.Frrp, 6, 1, 1, 1)

        self.Frrg = QtWidgets.QLineEdit(self.groupBox_3)
        self.Frrg.setAlignment(QtCore.Qt.AlignCenter)
        self.Frrg.setObjectName("Frrg")
        self.Frrg.setReadOnly(True)
        self.Frrg.setText("0%")
        self.gridLayout_8.addWidget(self.Frrg, 7, 1, 1, 1)



        ## ____________Groupe Force gravitationnelle

        self.groupBox_4 = QtWidgets.QGroupBox(self.Incertitudes)
        self.groupBox_4.setObjectName("groupBox_4")
        self.groupBox_4.setTitle("Force gravitationnelle")
        self.gridLayout.addWidget(self.groupBox_4, 1, 0, 1, 1)

        self.gridLayout_9 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_9.setObjectName("gridLayout_9")

        ##_______________Labels

        self.label_81 = QtWidgets.QLabel(self.groupBox_4)
        self.label_81.setObjectName("label_81")
        self.label_81.setText("Incertitude")
        self.gridLayout_9.addWidget(self.label_81, 0, 0, 1, 1)

        self.label_97 = QtWidgets.QLabel(self.groupBox_4)
        self.label_97.setObjectName("label_97")
        self.label_97.setText("Part de l\'incertitude :")
        self.gridLayout_9.addWidget(self.label_97, 1, 0, 1, 2)

        self.label_99 = QtWidgets.QLabel(self.groupBox_4)
        self.label_99.setObjectName("label_99")
        self.label_99.setText("m")
        self.gridLayout_9.addWidget(self.label_99, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_102 = QtWidgets.QLabel(self.groupBox_4)
        self.label_102.setObjectName("label_102")
        self.label_102.setText("alpha")
        self.gridLayout_9.addWidget(self.label_102, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_112 = QtWidgets.QLabel(self.groupBox_4)
        self.label_112.setObjectName("label_112")
        self.label_112.setText("g(h)")
        self.gridLayout_9.addWidget(self.label_112, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)

        ##_______________Line edit valeurs

        self.incerFgrav = QtWidgets.QLineEdit(self.groupBox_4)
        self.incerFgrav.setAlignment(QtCore.Qt.AlignCenter)
        self.incerFgrav.setObjectName("incerFgrav")
        self.incerFgrav.setReadOnly(True)
        self.incerFgrav.setText("0")
        self.gridLayout_9.addWidget(self.incerFgrav, 0, 1, 1, 1)

        self.Fgravm = QtWidgets.QLineEdit(self.groupBox_4)
        self.Fgravm.setAlignment(QtCore.Qt.AlignCenter)
        self.Fgravm.setObjectName("Fgravm")
        self.Fgravm.setReadOnly(True)
        self.Fgravm.setText("0%")
        self.gridLayout_9.addWidget(self.Fgravm, 2, 1, 1, 1)

        self.Fgravalpha = QtWidgets.QLineEdit(self.groupBox_4)
        self.Fgravalpha.setAlignment(QtCore.Qt.AlignCenter)
        self.Fgravalpha.setObjectName("Fgravalpha")
        self.Fgravalpha.setReadOnly(True)
        self.Fgravalpha.setText("0%")
        self.gridLayout_9.addWidget(self.Fgravalpha, 4, 1, 1, 1)

        self.Fgravg = QtWidgets.QLineEdit(self.groupBox_4)
        self.Fgravg.setAlignment(QtCore.Qt.AlignCenter)
        self.Fgravg.setObjectName("Fgravg")
        self.Fgravg.setReadOnly(True)
        self.Fgravg.setText("0%")
        self.gridLayout_9.addWidget(self.Fgravg, 3, 1, 1, 1)

        ##____________Groupe Force resultante

        self.groupBox_5 = QtWidgets.QGroupBox(self.Incertitudes)
        self.groupBox_5.setObjectName("groupBox_5")
        self.groupBox_5.setTitle("Force résultente")
        self.gridLayout.addWidget(self.groupBox_5, 1, 1, 1, 1)

        self.gridLayout_10 = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout_10.setObjectName("gridLayout_10")

        ##_______________Labels

        self.label_82 = QtWidgets.QLabel(self.groupBox_5)
        self.label_82.setObjectName("label_82")
        self.label_82.setText("Incertitude")
        self.gridLayout_10.addWidget(self.label_82, 0, 0, 1, 1)

        self.label_98 = QtWidgets.QLabel(self.groupBox_5)
        self.label_98.setObjectName("label_98")
        self.label_98.setText("Part de l\'incertitude :")
        self.gridLayout_10.addWidget(self.label_98, 1, 0, 1, 2)

        self.label_113 = QtWidgets.QLabel(self.groupBox_5)
        self.label_113.setObjectName("label_113")
        self.label_113.setText("m")
        self.gridLayout_10.addWidget(self.label_113, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)

        ##_______________Line edit valeurs

        self.incerFres = QtWidgets.QLineEdit(self.groupBox_5)
        self.incerFres.setAlignment(QtCore.Qt.AlignCenter)
        self.incerFres.setObjectName("incerFres")
        self.incerFres.setReadOnly(True)
        self.incerFres.setText("0")
        self.gridLayout_10.addWidget(self.incerFres, 0, 1, 1, 1)

        self.Fresm = QtWidgets.QLineEdit(self.groupBox_5)
        self.Fresm.setAlignment(QtCore.Qt.AlignCenter)
        self.Fresm.setObjectName("Fresm")
        self.Fresm.setReadOnly(True)
        self.Fresm.setText("0%")
        self.gridLayout_10.addWidget(self.Fresm, 2, 1, 1, 1)

        ##____________Groupe Energie de traction

        self.groupBox_2 = QtWidgets.QGroupBox(self.Incertitudes)
        self.groupBox_2.setObjectName("groupBox_2")
        self.groupBox_2.setTitle("Energie de traction")
        self.verticalLayout_7.addWidget(self.groupBox_2)

        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_6.setObjectName("gridLayout_6")

        ##_______________Labels

        #Incertitude

        self.label_114 = QtWidgets.QLabel(self.groupBox_2)
        self.label_114.setObjectName("label_114")
        self.label_114.setText("Incertitude")
        self.gridLayout_6.addWidget(self.label_114, 0, 0, 1, 2)

        self.line_8 = QtWidgets.QFrame(self.groupBox_2)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.gridLayout_6.addWidget(self.line_8, 1, 0, 1, 3)

        #Colonnes

        self.label_103 = QtWidgets.QLabel(self.groupBox_2)
        self.label_103.setObjectName("label_103")
        self.label_103.setText("Paramètre")
        self.gridLayout_6.addWidget(self.label_103, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_104 = QtWidgets.QLabel(self.groupBox_2)
        self.label_104.setObjectName("label_104")
        self.label_104.setText("Poids")
        self.gridLayout_6.addWidget(self.label_104, 2, 1, 1, 1, QtCore.Qt.AlignHCenter)

        self.label_105 = QtWidgets.QLabel(self.groupBox_2)
        self.label_105.setObjectName("label_105")
        self.label_105.setText("Part de l\'incertitude")
        self.gridLayout_6.addWidget(self.label_105, 2, 2, 1, 1, QtCore.Qt.AlignHCenter)

        #Paramètres

        self.label_100 = QtWidgets.QLabel(self.groupBox_2)
        self.label_100.setObjectName("label_100")
        self.label_100.setText("v")
        self.gridLayout_6.addWidget(self.label_100, 4, 0, 1, 1)

        self.label_101 = QtWidgets.QLabel(self.groupBox_2)
        self.label_101.setObjectName("label_101")
        self.label_101.setText("m")
        self.gridLayout_6.addWidget(self.label_101, 5, 0, 1, 1)

        self.label_106 = QtWidgets.QLabel(self.groupBox_2)
        self.label_106.setObjectName("label_106")
        self.label_106.setText("p")
        self.gridLayout_6.addWidget(self.label_106, 6, 0, 1, 1)

        self.label_107 = QtWidgets.QLabel(self.groupBox_2)
        self.label_107.setObjectName("label_107")
        self.label_107.setText("SCx")
        self.gridLayout_6.addWidget(self.label_107, 7, 0, 1, 1)

        self.label_108 = QtWidgets.QLabel(self.groupBox_2)
        self.label_108.setObjectName("label_108")
        self.label_108.setText("h")
        self.gridLayout_6.addWidget(self.label_108, 8, 0, 1, 1)

        self.label_109 = QtWidgets.QLabel(self.groupBox_2)
        self.label_109.setObjectName("label_109")
        self.label_109.setText("P")
        self.gridLayout_6.addWidget(self.label_109, 9, 0, 1, 1)

        self.label_110 = QtWidgets.QLabel(self.groupBox_2)
        self.label_110.setObjectName("label_110")
        self.label_110.setText("T")
        self.gridLayout_6.addWidget(self.label_110, 10, 0, 1, 1)

        self.label_111 = QtWidgets.QLabel(self.groupBox_2)
        self.label_111.setObjectName("label_111")
        self.label_111.setText("alpha")
        self.gridLayout_6.addWidget(self.label_111, 11, 0, 1, 1)

        self.line_7 = QtWidgets.QFrame(self.groupBox_2)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_6.addWidget(self.line_7, 12, 0, 1, 3)

        self.label_71 = QtWidgets.QLabel(self.groupBox_2)
        self.label_71.setObjectName("label_71")
        self.label_71.setText("rho")
        self.gridLayout_6.addWidget(self.label_71, 13, 0, 1, 1)

        self.label_72 = QtWidgets.QLabel(self.groupBox_2)
        self.label_72.setObjectName("label_72")
        self.label_72.setText("Crr")
        self.gridLayout_6.addWidget(self.label_72, 14, 0, 1, 1)

        self.label_77 = QtWidgets.QLabel(self.groupBox_2)
        self.label_77.setObjectName("label_77")
        self.label_77.setText("g")
        self.gridLayout_6.addWidget(self.label_77, 15, 0, 1, 1)

        ##_______________Line edit valeurs

        #Incertitude

        self.incerEtrac = QtWidgets.QLineEdit(self.groupBox_2)
        self.incerEtrac.setAlignment(QtCore.Qt.AlignCenter)
        self.incerEtrac.setObjectName("incerEtrac")
        self.incerEtrac.setReadOnly(True)
        self.incerEtrac.setText("0")
        self.gridLayout_6.addWidget(self.incerEtrac, 0, 2, 1, 1)

        #Poids

        self.EtracvP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracvP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracvP.setObjectName("EtracvP")
        self.EtracvP.setReadOnly(True)
        self.EtracvP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracvP, 4, 1, 1, 1)

        self.EtracmP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracmP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracmP.setObjectName("EtracmP")
        self.EtracmP.setReadOnly(True)
        self.EtracmP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracmP, 5, 1, 1, 1)

        self.EtracpP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracpP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracpP.setObjectName("EtracpP")
        self.EtracpP.setReadOnly(True)
        self.EtracpP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracpP, 6, 1, 1, 1)

        self.EtracSCxP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracSCxP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracSCxP.setObjectName("EtracSCxP")
        self.EtracSCxP.setReadOnly(True)
        self.EtracSCxP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracSCxP, 7, 1, 1, 1)

        self.EtrachP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtrachP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtrachP.setObjectName("EtrachP")
        self.EtrachP.setReadOnly(True)
        self.EtrachP.setText("0%")
        self.gridLayout_6.addWidget(self.EtrachP, 8, 1, 1, 1)

        self.EtracPP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracPP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracPP.setObjectName("EtracPP")
        self.EtracPP.setReadOnly(True)
        self.EtracPP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracPP, 9, 1, 1, 1)

        self.EtracTP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracTP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracTP.setObjectName("EtracTP")
        self.EtracTP.setReadOnly(True)
        self.EtracTP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracTP, 10, 1, 1, 1)

        self.EtracalphaP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracalphaP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracalphaP.setObjectName("EtracalphaP")
        self.EtracalphaP.setReadOnly(True)
        self.EtracalphaP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracalphaP, 11, 1, 1, 1)

        self.EtracRhoP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracRhoP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracRhoP.setObjectName("EtracRhoP")
        self.EtracRhoP.setReadOnly(True)
        self.EtracRhoP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracRhoP, 13, 1, 1, 1)

        self.EtracCrrP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracCrrP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracCrrP.setObjectName("EtracCrrP")
        self.EtracCrrP.setReadOnly(True)
        self.EtracCrrP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracCrrP, 14, 1, 1, 1)

        self.EtracgP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracgP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracgP.setObjectName("EtracgP")
        self.EtracgP.setReadOnly(True)
        self.EtracgP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracgP, 15, 1, 1, 1)

        #Part de l'incertitude

        self.Etracv = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etracv.setAlignment(QtCore.Qt.AlignCenter)
        self.Etracv.setObjectName("Etracv")
        self.Etracv.setReadOnly(True)
        self.Etracv.setText("0%")
        self.gridLayout_6.addWidget(self.Etracv, 4, 2, 1, 1)

        self.Etracm = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etracm.setAlignment(QtCore.Qt.AlignCenter)
        self.Etracm.setObjectName("Etracm")
        self.Etracm.setReadOnly(True)
        self.Etracm.setText("0%")
        self.gridLayout_6.addWidget(self.Etracm, 5, 2, 1, 1)

        self.Etracp = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etracp.setAlignment(QtCore.Qt.AlignCenter)
        self.Etracp.setObjectName("Etracp")
        self.Etracp.setReadOnly(True)
        self.Etracp.setText("0%")
        self.gridLayout_6.addWidget(self.Etracp, 6, 2, 1, 1)

        self.EtracSCx = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracSCx.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracSCx.setObjectName("EtracSCx")
        self.EtracSCx.setReadOnly(True)
        self.EtracSCx.setText("0%")
        self.gridLayout_6.addWidget(self.EtracSCx, 7, 2, 1, 1)

        self.Etrach = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etrach.setAlignment(QtCore.Qt.AlignCenter)
        self.Etrach.setObjectName("Etrach")
        self.Etrach.setReadOnly(True)
        self.Etrach.setText("0%")
        self.gridLayout_6.addWidget(self.Etrach, 8, 2, 1, 1)

        self.EtracP = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracP.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracP.setObjectName("EtracP")
        self.EtracP.setReadOnly(True)
        self.EtracP.setText("0%")
        self.gridLayout_6.addWidget(self.EtracP, 9, 2, 1, 1)

        self.EtracT = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracT.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracT.setObjectName("EtracT")
        self.EtracT.setReadOnly(True)
        self.EtracT.setText("0%")
        self.gridLayout_6.addWidget(self.EtracT, 10, 2, 1, 1)

        self.Etracalpha = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etracalpha.setAlignment(QtCore.Qt.AlignCenter)
        self.Etracalpha.setObjectName("Etracalpha")
        self.Etracalpha.setReadOnly(True)
        self.Etracalpha.setText("0%")
        self.gridLayout_6.addWidget(self.Etracalpha, 11, 2, 1, 1)

        self.Etracrho = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etracrho.setAlignment(QtCore.Qt.AlignCenter)
        self.Etracrho.setObjectName("Etracrho")
        self.Etracrho.setReadOnly(True)
        self.Etracrho.setText("0%")
        self.gridLayout_6.addWidget(self.Etracrho, 13, 2, 1, 1)

        self.EtracCrr = QtWidgets.QLineEdit(self.groupBox_2)
        self.EtracCrr.setAlignment(QtCore.Qt.AlignCenter)
        self.EtracCrr.setObjectName("EtracCrr")
        self.EtracCrr.setReadOnly(True)
        self.EtracCrr.setText("0%")
        self.gridLayout_6.addWidget(self.EtracCrr, 14, 2, 1, 1)

        self.Etracg = QtWidgets.QLineEdit(self.groupBox_2)
        self.Etracg.setAlignment(QtCore.Qt.AlignCenter)
        self.Etracg.setObjectName("Etracg")
        self.Etracg.setReadOnly(True)
        self.Etracg.setText("0%")
        self.gridLayout_6.addWidget(self.Etracg, 15, 2, 1, 1)

        ##Initialisation

        self.EtracPrec = 0
        self.uEtracPrec = 0
        self.uEtracRPrec = 0

        self.tabParametres.setCurrentIndex(0)
        self.tadResultats.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def updateCycles(self):
        cyclesName = os.listdir(str(self.path+"/cycles"))
        self.boxcyclev.clear()
        for i in range(len(cyclesName)):
            self.boxcyclev.addItem(cyclesName[i][0:-4])

    def toggleAllIncer(self):
        if self.buttonParamPrimaires.isChecked():
            self.buttonv.setChecked(True)
            self.buttonm.setChecked(True)
            self.buttonp.setChecked(True)
            self.buttonSCx.setChecked(True)
            self.buttonh.setChecked(True)
            self.buttonP.setChecked(True)
            self.buttonT.setChecked(True)
            self.buttonalpha.setChecked(True)
        else:
            self.buttonv.setChecked(False)
            self.buttonm.setChecked(False)
            self.buttonp.setChecked(False)
            self.buttonSCx.setChecked(False)
            self.buttonh.setChecked(False)
            self.buttonP.setChecked(False)
            self.buttonT.setChecked(False)
            self.buttonalpha.setChecked(False)

    def enableIncer(self, button, lineIncer, box, copybutton, label):
        if button.isChecked():
            lineIncer.setEnabled(True)
            box.setEnabled(True)
            copybutton.setEnabled(True)
            label.setEnabled(True)
        else:
            lineIncer.setEnabled(False)
            box.setEnabled(False)
            copybutton.setEnabled(False)
            label.setEnabled(False)

    def enableAllLines(self, button, layout):
        for i in range(layout.count()):
            widget = layout.itemAt(i).widget()
            if (type(widget) == QtWidgets.QLineEdit):
                if (button.isChecked()):
                    widget.setEnabled(True)
                else :
                    widget.setEnabled(False)

    def copyIncer(self, label, line):
        line.setText(label.text())

    def copyAllIncer(self):
        for copybutton in self.copybuttonx:
            if copybutton.isEnabled():
                copybutton.click()

    ##MenuBar functions

    def restartApp(self):
        python = sys.executable
        os.execl(python, python, * sys.argv)

    def openGuide(self):
        pathGuide = self.path+"/doc/help.pdf"
        webbrowser.open_new(pathGuide)

    def run(self):

        ## Temps, Distance, Vitesse, Acceleration

        t = []
        v = []
        vkmh = []

        cycleName = self.path+"/cycles/"+str(self.boxcyclev.currentText())+".csv"

        with open(cycleName,'r') as csv_file:
            cycleCSV = csv.reader(csv_file,delimiter=';')
            next(cycleCSV)
            for line in cycleCSV:
                t.append(int(line[0]))
                vkmh.append(float(line[1].replace(',','.')))
                v.append(float(line[1].replace(',','.'))/3.6)

        t = np.array(t)
        d = integrate.cumtrapz(v,t,initial=0)
        v = np.array(v)
        dv = np.diff(v)
        dt = np.diff(t)
        a = dv/dt
        a = np.insert(a,0,0)

        ## Affichage V

        self.graphicVitesse.clear()
        self.graphicVitesse.addLegend(offset=5, pen='k', brush='w')
        self.graphicVitesse.plot(t, vkmh, pen='b', name=self.boxcyclev.currentText())
        self.graphicVitesse.showGrid(x=True,y=True)
        self.graphicVitesse.setLabel('bottom', 'Temps', units='s')
        self.graphicVitesse.setLabel('left', 'Vitesse', units='km/h')

        ## Paramètres Primaires

        m = float(self.linem.text())
        p = float(self.linep.text())
        SCx = float(self.lineSCx.text())
        h = float(self.lineh.text())
        P = float(self.lineP.text())
        T =float(self.lineT.text())
        alpha =float(self.linealpha.text())

        ##____Incertitudes

        if(self.buttonv.isChecked()):
            uv = float(self.lineIncerv.text())
        else:
            uv = 0
        if(self.buttonm.isChecked()):
            um = float(self.lineIncerm.text())
        else:
            um = 0
        if(self.buttonp.isChecked()):
            up = float(self.lineIncerp.text())
        else:
            up = 0
        if(self.buttonSCx.isChecked()):
            uSCx = float(self.lineIncerSCx.text())
        else:
            uSCx = 0
        if(self.buttonh.isChecked()):
            uh = float(self.lineIncerh.text())
        else:
            uh = 0
        if(self.buttonP.isChecked()):
            uP = float(self.lineIncerP.text())
        else:
            uP = 0
        if(self.buttonT.isChecked()):
            uT =float(self.lineIncerT.text())
        else:
            uT = 0
        if(self.buttonalpha.isChecked()):
            ualpha =float(self.lineInceralpha.text())
        else:
            ualpha = 0

        ux = [uv, um, up, uSCx, uh, uP, uT, ualpha]

        ##____Distributions

        dv = int(self.boxv.currentIndex())
        dm = int(self.boxm.currentIndex())
        dp = int(self.boxp.currentIndex())
        dSCx = int(self.boxSCx.currentIndex())
        dh = int(self.boxh.currentIndex())
        dP = int(self.boxP.currentIndex())
        dT = int(self.boxT.currentIndex())
        dalpha = int(self.boxalpha.currentIndex())

        dx = [dv, dm, dp, dSCx, dh, dP, dT, dalpha]

        # 0 = Incertitude Type
        # 1 = Gaussienne
        # 2 = Rectangulaire
        # 3 = Triangle
        # 4 = Normale
        # 5 = Arcnp.sinus

        for i in range(len(ux)):
            if (dx[i]==1):
                ux[i]=ux[i]/3
            elif (dx[i]==2):
                ux[i]=ux[i]/np.np.sqrt(3)
            elif (dx[i]==3):
                ux[i]=ux[i]/np.np.sqrt(6)
            elif (dx[i]==4):
                ux[i]=ux[i]/np.np.sqrt(9)
            elif (dx[i]==5):
                ux[i]=ux[i]/np.np.sqrt(2)

        ## Constantes

        M = float(self.lineM.text())
        R = float(self.lineR.text())
        P0 = float(self.lineP0.text())
        lambda0 = float(self.linelambda0.text())
        lambda1 = float(self.linelambda1.text())
        lambda2 = float(self.linelambda2.text())
        G = float(self.lineG.text())
        Mt = float(self.lineMt.text())
        Rt = float(self.lineRt.text())

        ## Equations

        equrho1 = self.linerhoEquation1.text()
        equrho2 = self.linerhoEquation2.text()
        equCrr = self.lineCrrEquation.text()
        equg = self.linegEquation.text()

        ## Paramètres secondaires

        rhoNom = float(self.linerho.text())
        CrrNom = float(self.lineCrr.text())
        gNom = float(self.lineg.text())
        rMotNom = float(self.linerMot.text())
        rRegNom = float(self.linerReg.text())

        rhoMode = self.boxrho.currentIndex()
        CrrMode = self.boxCrr.currentIndex()
        gMode = self.boxg.currentIndex()
        rMotMode = self.boxrMot.currentIndex()
        rRegMode = self.boxrReg.currentIndex()

        if (gMode == 0):
            g = gNom
        elif (gMode == 1):
            g = eval(equg)
        if (rhoMode == 0):
            rho = rhoNom
        elif (rhoMode == 1):
            rho = eval(equrho1)
        elif (rhoMode == 2):
            rho = eval(equrho2)
        if (CrrMode == 0):
            Crr = CrrNom
        elif (CrrMode == 1):
            Crr = eval(equCrr)
        if (rMotMode == 0):
            rMot = rMotNom
        elif (rMotMode == 1):
            rMot = rMotNom
            #rMot = eval(equrMot)
        if (rRegMode == 0):
            rReg = rRegNom
        elif (rRegMode == 1):
            rReg = rRegNom
            #rReg = eval(equrReg)

        ## ___Ptrac Etrac

        #Forces qui s appliquent au vehicule
        Fgrav = m*g*np.sin(alpha)       #Force gravitationnelle
        Faero = 1/2*rho*SCx*v**2        #Force aerodynamique
        Frr = Crr*m*g*np.cos(alpha)     #Force de resistance au roulement
        Fres = m*a                      #Force resultante de la loi de Newton

        #Force de traction
        Ftrac = Fgrav + Faero + Frr + Fres

        #Puissance de traction
        Ptrac = Ftrac*v

        #Rement en phase de motorisation et de regeneration
        for i in range(len(Ptrac)):
            if(Ptrac[i]>0):
                Ptrac[i]=Ptrac[i]*(1/rMot)
            else:
                Ptrac[i]=Ptrac[i]*rReg

        #Energie en kWh
        Etrac = integrate.cumtrapz(Ptrac,t,initial=0)

        ## ___Incertitudes parametres secondaires

        #Derivees partielles des paramètres secondaires rho, Crr et g

        if (rhoMode == 0):
            drho_dh = 0
            drho_dP = 0
            drho_dT = 0
        elif (rhoMode == 1):
            drho_dh = 0
            drho_dP = M/(R*T)
            drho_dT = -P*M/(R*T**2)
        elif (rhoMode == 2):
            drho_dh = -P0*M**2*g/(R**2+T**2)*np.exp(-h*M*g/(R*T))
            drho_dP = 0
            drho_dT = P0*M/(R*T**2)*np.exp(-h*M*g/(R*T))*(h*M*g/(R*T)-1)
        if (CrrMode == 0):
            dCrr_dp = 0
            dCrr_dv = 0
        elif (CrrMode == 1):
            dCrr_dp = -(lambda1 + lambda2*v**2)/(p**2)
            dCrr_dv = 2*lambda2*v/p
        if (gMode == 0):
            dg_dh = 0
        elif (gMode == 1):
            dg_dh = (-2)*G*Mt/(Rt+h)**3

        #Incertitude des paramètres secondaires rho, Crr et g
        if (self.actionQuadratique.isChecked()):
            urho = np.sqrt((drho_dP*uP)**2+(drho_dT*uT)**2+(drho_dh*uh)**2)
            uCrr = np.sqrt((dCrr_dp*up)**2+(dCrr_dv*uv)**2)
            ug = np.sqrt((dg_dh*uh)**2)
        else:
            urho = drho_dP*uP+drho_dT*uT+drho_dh*uh
            uCrr = dCrr_dp*up+dCrr_dv*uv
            ug = dg_dh*uh

        ## ___Derivees partielles forces

        #Derivees partielles de chaque force par rapport à ses paramètres

        #Derivees partielles de la force aerodynamique Faero
        #Faero = 1/2*rho*v**2*SCx
        dFaero_drho = 0.5*SCx*v**2
        dFaero_dSCx =  0.5*rho*v**2
        dFaero_dv = rho*SCx*v

        dFaero_dP = dFaero_drho*drho_dP
        dFaero_dT = dFaero_drho*drho_dT
        dFaero_dh = dFaero_drho*drho_dh

        #Derivees partielles de la force de resistance au roulement Frr
        #Frr = Crr*m*g*np.cos(alpha)
        dFrr_dCrr = m*g*np.cos(alpha)
        dFrr_dm = Crr*g*np.cos(alpha)
        dFrr_dg = Crr*m*np.cos(alpha)
        dFrr_dalpha = -Crr*m*g*np.sin(alpha)

        dFrr_dp = dFrr_dCrr*dCrr_dp
        dFrr_dv = dFrr_dCrr*dCrr_dv
        dFrr_dh = dFrr_dg*dg_dh

        #Derivees partielles de la force gravitationnelle Fgrav
        #Fgrav = m*g*np.sin(alpha)
        dFgrav_dm = g*np.sin(alpha)
        dFgrav_dg = m*np.sin(alpha)
        dFgrav_dalpha = m*g*np.cos(alpha)

        dFgrav_dh = dFgrav_dg*dg_dh

        #Derivees partielles de la force resultante de la loi de Newton Fres
        #Fres = m*a
        dFres_dm = a

        ## ___Derivees partielles puissance

        #Derivées partielles de la puissance par rapport à ses paramètres
        #multipliées par leurs incertitudes
        dP_dv = 3/2*rho*SCx*v**2+(lambda0+1/p*(lambda1+3*lambda2*v**2))*m*g*np.cos(alpha)+m*g*np.sin(alpha)
        dP_dm = (dFrr_dm+dFgrav_dm+dFres_dm)*v
        dP_dh = (dFaero_dh+dFrr_dh+dFgrav_dh)*v
        dP_dp = dFrr_dp*v
        dP_dSCx = dFaero_dSCx*v
        dP_dP = dFaero_dP*v
        dP_dT = dFaero_dT*v
        dP_dalpha = (dFrr_dalpha+dFgrav_dalpha)*v

        dP_drho = dFaero_drho*v
        dP_dCrr = dFrr_dCrr*v
        dP_dg = (dFrr_dg+dFgrav_dg)*v

        for i in range(len(Ptrac)):
            if(Ptrac[i]>0):
                dP_dv[i]=dP_dv[i]*(1/rMot)
                dP_dm[i]=dP_dm[i]*(1/rMot)
                dP_dh[i]=dP_dh[i]*(1/rMot)
                dP_dp[i]=dP_dp[i]*(1/rMot)
                dP_dSCx[i]=dP_dSCx[i]*(1/rMot)
                dP_dP[i]=dP_dP[i]*(1/rMot)
                dP_dT[i]=dP_dT[i]*(1/rMot)
                dP_dalpha[i]=dP_dalpha[i]*(1/rMot)
                dP_drho[i]=dP_drho[i]*(1/rMot)
                dP_dCrr[i]=dP_dCrr[i]*(1/rMot)
                dP_dg[i]=dP_dg[i]*(1/rMot)
            else:
                dP_dv[i]=dP_dv[i]*rReg
                dP_dm[i]=dP_dm[i]*rReg
                dP_dh[i]=dP_dh[i]*rReg
                dP_dp[i]=dP_dp[i]*rReg
                dP_dSCx[i]=dP_dSCx[i]*rReg
                dP_dP[i]=dP_dP[i]*rReg
                dP_dT[i]=dP_dT[i]*rReg
                dP_dalpha[i]=dP_dalpha[i]*rReg
                dP_drho[i]=dP_drho[i]*rReg
                dP_dCrr[i]=dP_dCrr[i]*rReg
                dP_dg[i]=dP_dg[i]*rReg

        dP_dx = [dP_dv, dP_dm, dP_dp, dP_dSCx, dP_dh, dP_dP, dP_dT, dP_dalpha]

        ## ___Incertitude/Poids Forces

        ##_______Incertitude/Poids Faero
        if (self.actionQuadratique.isChecked()):
            dFaero = (dFaero_dv*uv)**2+(dFaero_dSCx*uSCx)**2+(dFaero_drho*urho)**2
            uFaero = np.sqrt(dFaero)

            if (np.mean(dFaero) == 0):
                pvFaero = 0
                pSCxFaero = 0
                prhoFaero = 0
                phFaero = 0
                pPFaero = 0
                pTFaero = 0
            else:
                pvFaero = np.mean((dFaero_dv*uv)**2)*100/np.mean(dFaero)
                pSCxFaero = np.mean((dFaero_dSCx*uSCx)**2)*100/np.mean(dFaero)
                prhoFaero = np.mean((dFaero_drho*urho)**2)*100/np.mean(dFaero)
                phFaero = np.mean((dFaero_dh*uh)**2)*100/np.mean(dFaero)
                pPFaero = np.mean((dFaero_dP*uP)**2)*100/np.mean(dFaero)
                pTFaero = np.mean((dFaero_dT*uT)**2)*100/np.mean(dFaero)
        else:
            uFaero = dFaero_dv*uv+dFaero_dSCx*uSCx+dFaero_drho*urho

            if (np.mean(uFaero) == 0):
                pvFaero = 0
                pSCxFaero = 0
                prhoFaero = 0
                phFaero = 0
                pPFaero = 0
                pTFaero = 0
            else:
                pvFaero = np.mean(dFaero_dv*uv)*100/np.mean(uFaero)
                pSCxFaero = np.mean(dFaero_dSCx*uSCx)*100/np.mean(uFaero)
                prhoFaero = np.mean(dFaero_drho*urho)*100/np.mean(uFaero)
                phFaero = np.mean(dFaero_dh*uh)*100/np.mean(uFaero)
                pPFaero = np.mean(dFaero_dP*uP)*100/np.mean(uFaero)
                pTFaero = np.mean(dFaero_dT*uT)*100/np.mean(uFaero)

        ##_______Affichage Incertitude/Poids Faero

        self.incerFaero.setText(str(round(np.mean(uFaero),1))+' N')
        self.Faerov.setText(str(round(pvFaero,1))+' %')
        self.FaeroSCx.setText(str(round(pSCxFaero,1))+' %')
        self.FaeroRho.setText(str(round(prhoFaero,1))+' %')
        self.Faeroh.setText(str(round(phFaero,1))+' %')
        self.FaeroP.setText(str(round(pPFaero,1))+' %')
        self.FaeroT.setText(str(round(pTFaero,1))+' %')


        ##_______Incertitude/Poids Frr

        if (self.actionQuadratique.isChecked()):
            dFrr = (dFrr_dm*um)**2+(dFrr_dalpha*ualpha)**2+(dFrr_dCrr*uCrr)**2+(dFrr_dg*ug)**2
            uFrr = np.sqrt(dFrr)

            if (np.mean(dFrr) == 0):
                pmFrr = 0
                palphaFrr = 0
                pCrrFrr = 0
                pvFrr = 0
                ppFrr =0
                pgFrr = 0

            else:
                pmFrr = np.mean((dFrr_dm*um)**2)*100/np.mean(dFrr)
                palphaFrr = np.mean((dFrr_dalpha*ualpha)**2)*100/np.mean(dFrr)
                pCrrFrr = np.mean((dFrr_dCrr*uCrr)**2)*100/np.mean(dFrr)
                pvFrr = np.mean((dFrr_dv*uv)**2)*100/np.mean(dFrr)
                ppFrr =np.mean((dFrr_dp*up)**2)*100/np.mean(dFrr)
                pgFrr = np.mean((dFrr_dg*ug)**2)*100/np.mean(dFrr)
        else:
            uFrr = dFrr_dm*um+dFrr_dalpha*ualpha+dFrr_dCrr*uCrr+dFrr_dg*ug

            if (np.mean(uFrr) == 0):
                pmFrr = 0
                palphaFrr = 0
                pCrrFrr = 0
                pvFrr = 0
                ppFrr =0
                pgFrr = 0

            else:
                pmFrr = np.mean(dFrr_dm*um)*100/np.mean(uFrr)
                palphaFrr = np.mean(dFrr_dalpha*ualpha)*100/np.mean(uFrr)
                pCrrFrr = np.mean(dFrr_dCrr*uCrr)*100/np.mean(uFrr)
                pvFrr = np.mean(dFrr_dv*uv)*100/np.mean(uFrr)
                ppFrr =np.mean(dFrr_dp*up)*100/np.mean(uFrr)
                pgFrr = np.mean(dFrr_dg*ug)*100/np.mean(uFrr)

        ##_______Affichage Incertitude/Poids Frr

        self.incerFrr.setText(str(round(np.mean(uFrr),1))+' N')
        self.Frrm.setText(str(round(pmFrr,1))+' %')
        self.Frralpha.setText(str(round(palphaFrr,1))+' %')
        self.FrrCrr.setText(str(round(pCrrFrr,1))+' %')
        self.Frrv.setText(str(round(pvFrr,1))+' %')
        self.Frrp.setText(str(round(ppFrr,1))+' %')
        self.Frrg.setText(str(round(pgFrr,1))+' %')

        ##_______Incertitude/Poids Fgrav

        if (self.actionQuadratique.isChecked()):
            dFgrav = (dFgrav_dm*um)**2+(dFgrav_dalpha*ualpha)**2+(dFgrav_dg*ug)**2
            uFgrav = np.sqrt(dFgrav)

            if (np.mean(dFgrav) == 0):
                pmFgrav = 0
                palphaFgrav = 0
                pgFgrav = 0
            else:
                pmFgrav = np.mean((dFgrav_dm*um)**2)*100/np.mean(dFgrav)
                palphaFgrav = np.mean((dFgrav_dalpha*ualpha)**2)*100/np.mean(dFgrav)
                pgFgrav = np.mean((dFgrav_dg*ug)**2)*100/np.mean(dFgrav)
        else:
            uFgrav = dFgrav_dm*um+dFgrav_dalpha*ualpha+dFgrav_dg*ug

            if (np.mean(uFgrav) == 0):
                pmFgrav = 0
                palphaFgrav = 0
                pgFgrav = 0
            else:
                pmFgrav = np.mean(dFgrav_dm*um)*100/np.mean(uFgrav)
                palphaFgrav = np.mean(dFgrav_dalpha*ualpha)*100/np.mean(uFgrav)
                pgFgrav = np.mean(dFgrav_dg*ug)*100/np.mean(uFgrav)

        ##_______Affichage Incertitude/Poids Fgrav

        self.incerFgrav.setText(str(round(np.mean(uFgrav),1))+' N')
        self.Fgravm.setText(str(round(pmFgrav,1))+' %')
        self.Fgravalpha.setText(str(round(palphaFgrav,1))+' %')
        self.Fgravg.setText(str(round(pgFgrav,1))+' %')


        ##_______Incertitude/Poids Fres

        if (self.actionQuadratique.isChecked()):
            dFres = (dFres_dm*um)**2
            uFres = np.sqrt(dFres)

            if (np.mean(dFres) == 0):
                pmFres = 0
            else:
                pmFres =100
        else:
            uFres = dFres_dm*um

            if (np.mean(uFres) == 0):
                pmFres = 0
            else:
                pmFres =100

        ##_______Affichage Incertitude/Poids Fres

        self.incerFres.setText(str(round(np.mean(uFres),1))+' N')
        self.Fresm.setText(str(round(pmFres,1))+' %')

        ## ___Incertitude/Poids Puissance

        #Calcul de l'incertitude de Ptrac et de la part de l'inertitude de ses paramètres
        if (self.actionQuadratique.isChecked()):
            dPtrac_dx = (dP_dv*uv)**2+(dP_dm*um)**2+(dP_dp*up)**2+(dP_dSCx*uSCx)**2+(dP_dh*uh)**2+(dP_dP*uP)**2+(dP_dT*uT)**2+(dP_dalpha*ualpha)**2
            uPtrac = np.sqrt(dPtrac_dx)
            uEtrac = integrate.cumtrapz(uPtrac,t,initial=0)

            if (np.mean(dPtrac_dx) == 0):
                pIncerv = 0
                pIncerm = 0
                pIncerp = 0
                pIncerSCx = 0
                pIncerh = 0
                pIncerP = 0
                pIncerT = 0
                pInceralpha = 0
                pIncerrho = 0
                pIncerCrr = 0
                pIncerg = 0
            else:
                pIncerv = np.mean((dP_dv*uv)**2)*100/np.mean(dPtrac_dx)
                pIncerm = np.mean((dP_dm*um)**2)*100/np.mean(dPtrac_dx)
                pIncerp = np.mean((dP_dp*up)**2)*100/np.mean(dPtrac_dx)
                pIncerSCx = np.mean((dP_dSCx*uSCx)**2)*100/np.mean(dPtrac_dx)
                pIncerh = np.mean((dP_dh*uh)**2)*100/np.mean(dPtrac_dx)
                pIncerP = np.mean((dP_dP*uP)**2)*100/np.mean(dPtrac_dx)
                pIncerT = np.mean((dP_dT*uT)**2)*100/np.mean(dPtrac_dx)
                pInceralpha = np.mean((dP_dalpha*ualpha)**2)*100/np.mean(dPtrac_dx)
                pIncerrho = np.mean((dP_drho*urho)**2)*100/np.mean(dPtrac_dx)
                pIncerCrr = np.mean((dP_dCrr*uCrr)**2)*100/np.mean(dPtrac_dx)
                pIncerg = np.mean((dP_dg*ug)**2)*100/np.mean(dPtrac_dx)
        else:
            uPtrac = dP_dv*uv+dP_dm*um+dP_dp*up+dP_dSCx*uSCx+dP_dh*uh+dP_dP*uP+dP_dT*uT+dP_dalpha*ualpha
            dPtrac = abs(dP_dv)*uv+abs(dP_dm*um)+abs(dP_dp*up)+abs(dP_dSCx*uSCx)+abs(dP_dh*uh)+abs(dP_dP*uP)+abs(dP_dT*uT)+abs(dP_dalpha*ualpha)
            uEtrac = integrate.cumtrapz(uPtrac,t,initial=0)

            if (np.mean(uPtrac) == 0):
                pIncerv = 0
                pIncerm = 0
                pIncerp = 0
                pIncerSCx = 0
                pIncerh = 0
                pIncerP = 0
                pIncerT = 0
                pInceralpha = 0
                pIncerrho = 0
                pIncerCrr = 0
                pIncerg = 0
            else:
                pIncerv = np.mean(abs(dP_dv)*uv)*100/np.mean(uPtrac)
                pIncerm = np.mean(abs(dP_dm)*um)*100/np.mean(uPtrac)
                pIncerp = np.mean(abs(dP_dp)*up)*100/np.mean(uPtrac)
                pIncerSCx = np.mean(abs(dP_dSCx)*uSCx)*100/np.mean(uPtrac)
                pIncerh = np.mean(abs(dP_dh)*uh)*100/np.mean(uPtrac)
                pIncerP = np.mean(abs(dP_dP)*uP)*100/np.mean(uPtrac)
                pIncerT = np.mean(abs(dP_dT)*uT)*100/np.mean(uPtrac)
                pInceralpha = np.mean(abs(dP_dalpha)*ualpha)*100/np.mean(uPtrac)
                pIncerrho = np.mean(abs(dP_drho)*urho)*100/np.mean(uPtrac)
                pIncerCrr = np.mean(abs(dP_dCrr)*uCrr)*100/np.mean(uPtrac)
                pIncerg = np.mean(abs(dP_dg)*ug)*100/np.mean(uPtrac)

        #Calcul du poids des paramètres
        #max(alpha)=15%
        #dPtrac = abs(dP_dv)/36.1111+abs(dP_dm)/3000+abs(dP_dp)/400000+abs(dP_dSCx)/1.1+abs(dP_dh)/2800+abs(dP_dP)/71914+abs(dP_dT)/319+abs(dP_dalpha)/0.2618
        dPtrac = abs(dP_dv)+abs(dP_dm)+abs(dP_dp)+abs(dP_dSCx)+abs(dP_dh)+abs(dP_dP)+abs(dP_dT)+abs(dP_dalpha)
        a = [abs(dP_dv),abs(dP_dm),abs(dP_dp),abs(dP_dSCx),abs(dP_dh),abs(dP_dP),abs(dP_dT),abs(dP_dalpha),dPtrac]

        a = np.asarray(a)
        np.savetxt("foo.csv", a, delimiter=";",fmt="%.5f")

        if (np.mean(dPtrac) == 0):
            pv = 0
            pm = 0
            pp = 0
            pSCx = 0
            ph = 0
            pP = 0
            pT = 0
            palpha = 0
            prho = 0
            pCrr = 0
            pg = 0
        else:
            pv = np.mean(abs(dP_dv))*100/np.mean(dPtrac)
            pm = np.mean(abs(dP_dm))*100/np.mean(dPtrac)
            pp = np.mean(abs(dP_dp))*100/np.mean(dPtrac)
            pSCx = np.mean(abs(dP_dSCx))*100/np.mean(dPtrac)
            ph = np.mean(abs(dP_dh))*100/np.mean(dPtrac)
            pP = np.mean(abs(dP_dP))*100/np.mean(dPtrac)
            pT = np.mean(abs(dP_dT))*100/np.mean(dPtrac)
            palpha = np.mean(abs(dP_dalpha))*100/np.mean(dPtrac)
            prho = np.mean(abs(dP_drho))*100/np.mean(dPtrac)
            pCrr = np.mean(abs(dP_dCrr))*100/np.mean(dPtrac)
            pg = np.mean(abs(dP_dg))*100/np.mean(dPtrac)

        ##_______Affichage part incertitude

        self.incerEtrac.setText(str(round(uEtrac[-1]/3600000,3))+' kWh ('+str(round(uEtrac[-1]/Etrac[-1]*100,3))+' %)')
        self.Etracv.setText(str(round(pIncerv,1))+' %')
        self.Etracm.setText(str(round(pIncerm,1))+' %')
        self.Etracp.setText(str(round(pIncerp,1))+' %')
        self.EtracSCx.setText(str(round(pIncerSCx,1))+' %')
        self.Etrach.setText(str(round(pIncerh,1))+' %')
        self.EtracP.setText(str(round(pIncerP,1))+' %')
        self.EtracT.setText(str(round(pIncerT,1))+' %')
        self.Etracalpha.setText(str(round(pInceralpha,1))+' %')
        self.Etracrho.setText(str(round(pIncerrho,1))+' %')
        self.EtracCrr.setText(str(round(pIncerCrr,1))+' %')
        self.Etracg.setText(str(round(pIncerg,1))+' %')

        ##_______Affichage poids

        self.EtracvP.setText(str(round(pv,3))+' %')
        self.EtracmP.setText(str(round(pm,3))+' %')
        self.EtracpP.setText(str(round(pp,3))+' %')
        self.EtracSCxP.setText(str(round(pSCx,3))+' %')
        self.EtrachP.setText(str(round(ph,3))+' %')
        self.EtracPP.setText(str(round(pP,3))+' %')
        self.EtracTP.setText(str(round(pT,3))+' %')
        self.EtracalphaP.setText(str(round(palpha,3))+' %')
        self.EtracRhoP.setText(str(round(prho,3))+' %')
        self.EtracCrrP.setText(str(round(pCrr,3))+' %')
        self.EtracgP.setText(str(round(pg,3))+' %')

        ## ___Affichage Graph Etrac

        self.graphicEtrac.clear()
        self.graphicEtrac.addLegend(offset=5, pen='k', brush='w')
        self.graphicEtrac.showGrid(x=True,y=True)
        self.graphicEtrac.setLabel('bottom', 'Temps', units='s')
        self.graphicEtrac.setLabel('left', 'Etrac', units='kWh')
        self.graphicEtrac.plot(t, Etrac/3600000, pen='b', name='Etrac')

        pEtracDesiree = float(self.lineUEtracDesiree.text())/100
        self.graphicEtrac.plot(t, (Etrac+uEtrac)/3600000, pen='r', name='Incertitude')
        self.graphicEtrac.plot(t, (Etrac-uEtrac)/3600000, pen='r', )
        self.graphicEtrac.plot(t, (Etrac*(1+pEtracDesiree))/3600000, pen=pyg.mkPen('g', style=QtCore.Qt.DashLine), name='Incertitude désirée')
        self.graphicEtrac.plot(t, (Etrac*(1-pEtracDesiree))/3600000, pen=pyg.mkPen('g', style=QtCore.Qt.DashLine))
        self.graphicEtrac.plot(t, Etrac/3600000, pen='b')

        ## ___Affichage Tableau Etrac

        self.tableEtrac.item(0,0).setText(str(round(Etrac[-1]/3600000,3))+' kWh')
        self.tableEtrac.item(1,0).setText(str(round(uEtrac[-1]/3600000,3))+' kWh')
        self.tableEtrac.item(2,0).setText(str(round(uEtrac[-1]/Etrac[-1]*100,3))+' %')

        self.tableEtrac.item(0,1).setText(str(round(self.EtracPrec/3600000,3))+' kWh')
        self.tableEtrac.item(1,1).setText(str(round(self.uEtracPrec/3600000,3))+' kWh')
        self.tableEtrac.item(2,1).setText(str(round(self.uEtracRPrec,3))+' %')

        self.tableEtrac.item(0,2).setText(str(round((Etrac[-1]-self.EtracPrec)/3600000,3))+' kWh')
        self.tableEtrac.item(1,2).setText(str(round((uEtrac[-1]-self.uEtracPrec)/3600000,3))+' kWh')
        self.tableEtrac.item(2,2).setText(str(round((uEtrac[-1]/Etrac[-1]*100)-self.uEtracRPrec,3))+' %')

        self.EtracPrec = Etrac[-1]
        self.uEtracPrec = uEtrac[-1]
        self.uEtracRPrec = uEtrac[-1]/Etrac[-1]*100

        ## ___Incertitude conseillée

        #Initialise les incertitudes conseillées à zéro
        for i in range(len(ux)):
            self.incerConceillee[i].setText('0')

        #Incertitude désirée
        uEtracD = pEtracDesiree*Etrac[-1]

        #Paramètres avec incertitude à 0
        n = []
        for i in range(len(ux)):
            if (self.buttonx[i].isChecked() & (np.mean(dP_dx[i])!=0)):
                n.append(i)
        print(n)

        if (self.actionQuadratique.isChecked()):
            if n:
                #Equation à résoudre pour trouver la part de l'incertitude
                def func(x):
                    out=[]
                    dPtracC = 0
                    for i in range(len(n)):
                        dPtracC += (dP_dx[n[i]]*abs(x[i]))**2
                    equ1 = uEtracD - integrate.cumtrapz(np.sqrt(dPtracC),t)[-1]
                    out.append(np.mean(equ1))
                    for j in range(len(n)-1):
                        out.append(np.mean((dP_dx[n[j]]*abs(x[j]))**2-(dP_dx[n[j+1]]*abs(x[j+1]))**2))
                    return out

                #Part de l'incertitude restante à partager
                initial = np.zeros(len(n))
                uxC = fsolve(func, initial)
                print(uxC)

                for i in range(len(n)):
                    self.incerConceillee[n[i]].setText(str("{:.3e}".format(abs(uxC[i]))))

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent=parent)
        ui = Ui_main_window()
        ui.setupUi(self)

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle('Fusion')
    w = MainWindow()
    w.showMaximized()
    sys.exit(app.exec_())